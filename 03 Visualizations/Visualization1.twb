<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='&quot;christinalien/s-17-dv-final-project&quot;' inline='true' name='federated.0wxqiao0ni8qwz1fno2qb0rnejzm' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='&quot;christinalien/s-17-dv-final-project&quot;' name='webdata-direct.0zqy6wr16fkypc15hollo1r3q4e8'>
            <connection APIVersion='' authType='none' authentication='no' channel='http' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;christinalien/s-17-dv-final-project&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmNocmlzdGluYWxpZW4iLCJpc3MiOiJhZ2VudDpjaHJpc3RpbmFsaWVuOjozZjFiMmE5Yy0xMWZiLTQxZDEtODQxMy05NDhhYjNjM2VjYWIiLCJpYXQiOjE0ODUzOTY5OTUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.Hkz-TK2Pc3mhB-Z4B2nbjC4w59DGInQUVM-cxqezUDWyGxEfFcZqcDH64GwvZ_x_q7Cv8uQQyk0U7Qa9e6aWmA&quot;}' connectionName='&quot;christinalien/s-17-dv-final-project&quot;' filename='' increment-key='' path='/' port='80' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[RiskFactors].[v_3]' />
              <expression op='[Adult_Adolescent_Obesity].[v_0]' />
            </expression>
          </clause>
          <relation connection='webdata-direct.0zqy6wr16fkypc15hollo1r3q4e8' name='RiskFactors' table='[RiskFactors]' type='table' />
          <relation connection='webdata-direct.0zqy6wr16fkypc15hollo1r3q4e8' name='Adult_Adolescent_Obesity' table='[AdultAdolescentObesity]' type='table' />
        </relation>
        <cols>
          <map key='[v_0 (Adult_Adolescent_Obesity)]' value='[Adult_Adolescent_Obesity].[v_0]' />
          <map key='[v_0]' value='[RiskFactors].[v_0]' />
          <map key='[v_1 (Adult_Adolescent_Obesity)]' value='[Adult_Adolescent_Obesity].[v_1]' />
          <map key='[v_10]' value='[RiskFactors].[v_10]' />
          <map key='[v_11]' value='[RiskFactors].[v_11]' />
          <map key='[v_12]' value='[RiskFactors].[v_12]' />
          <map key='[v_13]' value='[RiskFactors].[v_13]' />
          <map key='[v_14]' value='[RiskFactors].[v_14]' />
          <map key='[v_15]' value='[RiskFactors].[v_15]' />
          <map key='[v_16]' value='[RiskFactors].[v_16]' />
          <map key='[v_17]' value='[RiskFactors].[v_17]' />
          <map key='[v_18]' value='[RiskFactors].[v_18]' />
          <map key='[v_19]' value='[RiskFactors].[v_19]' />
          <map key='[v_1]' value='[RiskFactors].[v_1]' />
          <map key='[v_2 (Adult_Adolescent_Obesity)]' value='[Adult_Adolescent_Obesity].[v_2]' />
          <map key='[v_20]' value='[RiskFactors].[v_20]' />
          <map key='[v_21]' value='[RiskFactors].[v_21]' />
          <map key='[v_22]' value='[RiskFactors].[v_22]' />
          <map key='[v_23]' value='[RiskFactors].[v_23]' />
          <map key='[v_24]' value='[RiskFactors].[v_24]' />
          <map key='[v_25]' value='[RiskFactors].[v_25]' />
          <map key='[v_26]' value='[RiskFactors].[v_26]' />
          <map key='[v_27]' value='[RiskFactors].[v_27]' />
          <map key='[v_28]' value='[RiskFactors].[v_28]' />
          <map key='[v_29]' value='[RiskFactors].[v_29]' />
          <map key='[v_2]' value='[RiskFactors].[v_2]' />
          <map key='[v_30]' value='[RiskFactors].[v_30]' />
          <map key='[v_3]' value='[RiskFactors].[v_3]' />
          <map key='[v_4]' value='[RiskFactors].[v_4]' />
          <map key='[v_5]' value='[RiskFactors].[v_5]' />
          <map key='[v_6]' value='[RiskFactors].[v_6]' />
          <map key='[v_7]' value='[RiskFactors].[v_7]' />
          <map key='[v_8]' value='[RiskFactors].[v_8]' />
          <map key='[v_9]' value='[RiskFactors].[v_9]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>State_FIPS_Code</remote-alias>
            <ordinal>0</ordinal>
            <caption>State_FIPS_Code</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>County_FIPS_Code</remote-alias>
            <ordinal>1</ordinal>
            <caption>County_FIPS_Code</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>CHSI_County_Name</remote-alias>
            <ordinal>2</ordinal>
            <caption>CHSI_County_Name</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>CHSI_State_Name</remote-alias>
            <ordinal>3</ordinal>
            <caption>CHSI_State_Name</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>CHSI_State_Abbr</remote-alias>
            <ordinal>4</ordinal>
            <caption>CHSI_State_Abbr</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>Strata_ID_Number</remote-alias>
            <ordinal>5</ordinal>
            <caption>Strata_ID_Number</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>No_Exercise</remote-alias>
            <ordinal>6</ordinal>
            <caption>No_Exercise</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>CI_Min_No_Exercise</remote-alias>
            <ordinal>7</ordinal>
            <caption>CI_Min_No_Exercise</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_8]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>CI_Max_No_Exercise</remote-alias>
            <ordinal>8</ordinal>
            <caption>CI_Max_No_Exercise</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_9</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_9]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>Few_Fruit_Veg</remote-alias>
            <ordinal>9</ordinal>
            <caption>Few_Fruit_Veg</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_10</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_10]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>CI_Min_Fruit_Veg</remote-alias>
            <ordinal>10</ordinal>
            <caption>CI_Min_Fruit_Veg</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_11</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_11]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>CI_Max_Fruit_Veg</remote-alias>
            <ordinal>11</ordinal>
            <caption>CI_Max_Fruit_Veg</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_12</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_12]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>Obesity</remote-alias>
            <ordinal>12</ordinal>
            <caption>Obesity</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_13</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_13]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>CI_Min_Obesity</remote-alias>
            <ordinal>13</ordinal>
            <caption>CI_Min_Obesity</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_14</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_14]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>CI_Max_Obesity</remote-alias>
            <ordinal>14</ordinal>
            <caption>CI_Max_Obesity</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_15</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_15]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>High_Blood_Pres</remote-alias>
            <ordinal>15</ordinal>
            <caption>High_Blood_Pres</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_16</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_16]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>CI_Min_High_Blood_Pres</remote-alias>
            <ordinal>16</ordinal>
            <caption>CI_Min_High_Blood_Pres</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_17</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_17]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>CI_Max_High_Blood_Pres</remote-alias>
            <ordinal>17</ordinal>
            <caption>CI_Max_High_Blood_Pres</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_18</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_18]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>Smoker</remote-alias>
            <ordinal>18</ordinal>
            <caption>Smoker</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_19</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_19]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>CI_Min_Smoker</remote-alias>
            <ordinal>19</ordinal>
            <caption>CI_Min_Smoker</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_20</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_20]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>CI_Max_Smoker</remote-alias>
            <ordinal>20</ordinal>
            <caption>CI_Max_Smoker</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_21</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_21]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>Diabetes</remote-alias>
            <ordinal>21</ordinal>
            <caption>Diabetes</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_22</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_22]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>CI_Min_Diabetes</remote-alias>
            <ordinal>22</ordinal>
            <caption>CI_Min_Diabetes</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_23</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_23]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>CI_Max_Diabetes</remote-alias>
            <ordinal>23</ordinal>
            <caption>CI_Max_Diabetes</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_24</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_24]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>Uninsured</remote-alias>
            <ordinal>24</ordinal>
            <caption>Uninsured</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_25</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_25]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>Elderly_Medicare</remote-alias>
            <ordinal>25</ordinal>
            <caption>Elderly_Medicare</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_26</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_26]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>Disabled_Medicare</remote-alias>
            <ordinal>26</ordinal>
            <caption>Disabled_Medicare</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_27</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_27]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>Prim_Care_Phys_Rate</remote-alias>
            <ordinal>27</ordinal>
            <caption>Prim_Care_Phys_Rate</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_28</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_28]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>Dentist_Rate</remote-alias>
            <ordinal>28</ordinal>
            <caption>Dentist_Rate</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_29</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_29]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>Community_Health_Center_Ind</remote-alias>
            <ordinal>29</ordinal>
            <caption>Community_Health_Center_Ind</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_30</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_30]</local-name>
            <parent-name>[RiskFactors]</parent-name>
            <remote-alias>HPSA_Ind</remote-alias>
            <ordinal>30</ordinal>
            <caption>HPSA_Ind</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (Adult_Adolescent_Obesity)]</local-name>
            <parent-name>[Adult_Adolescent_Obesity]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>31</ordinal>
            <caption>Location</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_1 (Adult_Adolescent_Obesity)]</local-name>
            <parent-name>[Adult_Adolescent_Obesity]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>32</ordinal>
            <caption>Value</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2 (Adult_Adolescent_Obesity)]</local-name>
            <parent-name>[Adult_Adolescent_Obesity]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>33</ordinal>
            <caption>Age</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Index' datatype='string' name='[Calculation_611926600994254849]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [v_4]=&quot;AL&quot; or [v_4]=&quot;AK&quot; or [v_4]=&quot;AZ&quot; or [v_4]=&quot;AR&quot; or [v_4]=&quot;CA&quot; or [v_4]=&quot;CO&quot; or [v_4]=&quot;CT&quot; or [v_4]=&quot;DE&quot; or [v_4]=&quot;FL&quot; or [v_4]=&quot;GA&quot; THEN &quot;01&quot;&#13;&#10;ELSEIF [v_4]=&quot;HI&quot; or [v_4]=&quot;ID&quot; or [v_4]=&quot;IL&quot; or [v_4]=&quot;IN&quot; or [v_4]=&quot;IA&quot; or [v_4]=&quot;KS&quot; or [v_4]=&quot;KY&quot; or [v_4]=&quot;LA&quot; or [v_4]=&quot;ME&quot; or [v_4]=&quot;MD&quot; THEN &quot;02&quot;&#13;&#10;ELSEIF [v_4]=&quot;MA&quot; or [v_4]=&quot;MI&quot; or [v_4]=&quot;MN&quot; or [v_4]=&quot;MS&quot; or [v_4]=&quot;MO&quot; or [v_4]=&quot;MT&quot; or [v_4]=&quot;NE&quot; or [v_4]=&quot;NV&quot; or [v_4]=&quot;NH&quot; or [v_4]=&quot;NJ&quot; THEN &quot;03&quot;&#13;&#10;ELSEIF [v_4]=&quot;NM&quot; or [v_4]=&quot;NY&quot; or [v_4]=&quot;NC&quot; or [v_4]=&quot;ND&quot; or [v_4]=&quot;OH&quot; or [v_4]=&quot;OK&quot; or [v_4]=&quot;OR&quot; or [v_4]=&quot;PA&quot; or [v_4]=&quot;RI&quot; or [v_4]=&quot;SC&quot; THEN &quot;04&quot;&#13;&#10;ELSE &quot;05&quot;&#13;&#10;END' />
      </column>
      <column caption='X Axis' datatype='integer' name='[Calculation_611926601001488386]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(INDEX()-1)%10'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Y Axis' datatype='integer' name='[Calculation_611926601001594883]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT((INDEX()-1/10))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calculated Diff Diabetes' datatype='real' name='[Calculation_611926601016590342]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([v_21])-7.45' />
      </column>
      <column caption='Calculated Diff Fruits/Veg' datatype='real' name='[Calculation_611926601022689287]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([v_9])-77.41' />
      </column>
      <column caption='Calculated Diff High Blood Pressure' datatype='real' name='[Calculation_611926601022877704]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([v_15])-26.16' />
      </column>
      <column caption='Calculated Diff No Exercise' datatype='real' name='[Calculation_611926601023086601]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([v_6])-25.15' />
      </column>
      <column caption='Calculated Diff Smoker' datatype='real' name='[Calculation_611926601023254538]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([v_18])-22.33' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Location' datatype='string' name='[v_0 (Adult_Adolescent_Obesity)]' role='dimension' type='nominal' />
      <column caption='State_FIPS_Code' datatype='integer' name='[v_0]' role='measure' type='quantitative' />
      <column caption='Value' datatype='real' name='[v_1 (Adult_Adolescent_Obesity)]' role='measure' type='quantitative' />
      <column caption='CI_Min_Fruit_Veg' datatype='real' name='[v_10]' role='measure' type='quantitative' />
      <column caption='CI_Max_Fruit_Veg' datatype='real' name='[v_11]' role='measure' type='quantitative' />
      <column caption='Obesity' datatype='real' name='[v_12]' role='measure' type='quantitative' />
      <column caption='CI_Min_Obesity' datatype='real' name='[v_13]' role='measure' type='quantitative' />
      <column caption='CI_Max_Obesity' datatype='real' name='[v_14]' role='measure' type='quantitative' />
      <column caption='High_Blood_Pres' datatype='real' name='[v_15]' role='measure' type='quantitative' />
      <column caption='CI_Min_High_Blood_Pres' datatype='real' name='[v_16]' role='measure' type='quantitative' />
      <column caption='CI_Max_High_Blood_Pres' datatype='real' name='[v_17]' role='measure' type='quantitative' />
      <column caption='Smoker' datatype='real' name='[v_18]' role='measure' type='quantitative' />
      <column caption='CI_Min_Smoker' datatype='real' name='[v_19]' role='measure' type='quantitative' />
      <column caption='County_FIPS_Code' datatype='integer' name='[v_1]' role='measure' type='quantitative' />
      <column caption='Age' datatype='string' name='[v_2 (Adult_Adolescent_Obesity)]' role='dimension' type='nominal' />
      <column caption='CI_Max_Smoker' datatype='real' name='[v_20]' role='measure' type='quantitative' />
      <column caption='Diabetes' datatype='real' name='[v_21]' role='measure' type='quantitative' />
      <column caption='CI_Min_Diabetes' datatype='real' name='[v_22]' role='measure' type='quantitative' />
      <column caption='CI_Max_Diabetes' datatype='real' name='[v_23]' role='measure' type='quantitative' />
      <column caption='Uninsured' datatype='integer' name='[v_24]' role='measure' type='quantitative' />
      <column caption='Elderly_Medicare' datatype='integer' name='[v_25]' role='measure' type='quantitative' />
      <column caption='Disabled_Medicare' datatype='integer' name='[v_26]' role='measure' type='quantitative' />
      <column caption='Prim_Care_Phys_Rate' datatype='real' name='[v_27]' role='measure' type='quantitative' />
      <column caption='Dentist_Rate' datatype='real' name='[v_28]' role='measure' type='quantitative' />
      <column caption='Community_Health_Center_Ind' datatype='integer' name='[v_29]' role='measure' type='quantitative' />
      <column caption='CHSI_County_Name' datatype='string' name='[v_2]' role='dimension' type='nominal' />
      <column caption='HPSA_Ind' datatype='integer' name='[v_30]' role='measure' type='quantitative' />
      <column caption='CHSI_State_Name' datatype='string' name='[v_3]' role='dimension' type='nominal' />
      <column caption='CHSI_State_Abbr' datatype='string' name='[v_4]' role='dimension' type='nominal' />
      <column caption='Strata_ID_Number' datatype='integer' name='[v_5]' role='measure' type='quantitative' />
      <column caption='No_Exercise' datatype='real' name='[v_6]' role='measure' type='quantitative' />
      <column caption='CI_Min_No_Exercise' datatype='real' name='[v_7]' role='measure' type='quantitative' />
      <column caption='CI_Max_No_Exercise' datatype='real' name='[v_8]' role='measure' type='quantitative' />
      <column caption='Few_Fruit_Veg' datatype='real' name='[v_9]' role='measure' type='quantitative' />
      <column-instance column='[v_1 (Adult_Adolescent_Obesity)]' derivation='Avg' name='[avg:v_1 (Adult_Adolescent_Obesity):qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_15]' derivation='Avg' name='[avg:v_15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_18]' derivation='Avg' name='[avg:v_18:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_21]' derivation='Avg' name='[avg:v_21:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_6]' derivation='Avg' name='[avg:v_6:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_9]' derivation='Avg' name='[avg:v_9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_0]' derivation='Sum' name='[sum:v_0:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_1 (Adult_Adolescent_Obesity)]' derivation='Sum' name='[sum:v_1 (Adult_Adolescent_Obesity):qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_10]' derivation='Sum' name='[sum:v_10:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_11]' derivation='Sum' name='[sum:v_11:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_12]' derivation='Sum' name='[sum:v_12:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_13]' derivation='Sum' name='[sum:v_13:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_14]' derivation='Sum' name='[sum:v_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_15]' derivation='Sum' name='[sum:v_15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_16]' derivation='Sum' name='[sum:v_16:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_17]' derivation='Sum' name='[sum:v_17:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_19]' derivation='Sum' name='[sum:v_19:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_1]' derivation='Sum' name='[sum:v_1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_20]' derivation='Sum' name='[sum:v_20:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_21]' derivation='Sum' name='[sum:v_21:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_22]' derivation='Sum' name='[sum:v_22:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_23]' derivation='Sum' name='[sum:v_23:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_24]' derivation='Sum' name='[sum:v_24:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_25]' derivation='Sum' name='[sum:v_25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_26]' derivation='Sum' name='[sum:v_26:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_27]' derivation='Sum' name='[sum:v_27:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_28]' derivation='Sum' name='[sum:v_28:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_29]' derivation='Sum' name='[sum:v_29:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_30]' derivation='Sum' name='[sum:v_30:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_5]' derivation='Sum' name='[sum:v_5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_6]' derivation='Sum' name='[sum:v_6:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_7]' derivation='Sum' name='[sum:v_7:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_8]' derivation='Sum' name='[sum:v_8:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_9]' derivation='Sum' name='[sum:v_9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_611926601001488386]' derivation='User' name='[usr:Calculation_611926601001488386:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_611926601001594883]' derivation='User' name='[usr:Calculation_611926601001594883:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_611926601016590342]' derivation='User' name='[usr:Calculation_611926601016590342:qk:1]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_611926601022689287]' derivation='User' name='[usr:Calculation_611926601022689287:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_611926601022877704]' derivation='User' name='[usr:Calculation_611926601022877704:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_611926601023086601]' derivation='User' name='[usr:Calculation_611926601023086601:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_611926601023254538]' derivation='User' name='[usr:Calculation_611926601023254538:qk]' pivot='key' type='quantitative' />
      <group name='[Top 10 Obesity Rates]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_0 (Adult_Adolescent_Obesity)]' member='&quot;Alabama&quot;' />
          <groupfilter function='member' level='[v_0 (Adult_Adolescent_Obesity)]' member='&quot;Arkansas&quot;' />
          <groupfilter function='member' level='[v_0 (Adult_Adolescent_Obesity)]' member='&quot;Indiana&quot;' />
          <groupfilter function='member' level='[v_0 (Adult_Adolescent_Obesity)]' member='&quot;Iowa&quot;' />
          <groupfilter function='member' level='[v_0 (Adult_Adolescent_Obesity)]' member='&quot;Minnesota&quot;' />
          <groupfilter function='member' level='[v_0 (Adult_Adolescent_Obesity)]' member='&quot;Mississippi&quot;' />
          <groupfilter function='member' level='[v_0 (Adult_Adolescent_Obesity)]' member='&quot;Oregon&quot;' />
          <groupfilter function='member' level='[v_0 (Adult_Adolescent_Obesity)]' member='&quot;Pennsylvania&quot;' />
          <groupfilter function='member' level='[v_0 (Adult_Adolescent_Obesity)]' member='&quot;Washington&quot;' />
          <groupfilter function='member' level='[v_0 (Adult_Adolescent_Obesity)]' member='&quot;West Virginia&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Christina\Documents\My Tableau Repository\Datasources\federated.0wxqiao0ni8qwz1fno2qb0rnejzm_19awiiq0pmpuqa144fb5506gsly7.tde' schema='Extract' tablename='Extract' update-time='04/30/2017 08:47:12 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[v_0 (Adult_Adolescent_Obesity)]' value='[Extract].[v_0]' />
            <map key='[v_0]' value='[Extract].[v_01]' />
            <map key='[v_1 (Adult_Adolescent_Obesity)]' value='[Extract].[v_1]' />
            <map key='[v_10]' value='[Extract].[v_10]' />
            <map key='[v_11]' value='[Extract].[v_11]' />
            <map key='[v_12]' value='[Extract].[v_12]' />
            <map key='[v_13]' value='[Extract].[v_13]' />
            <map key='[v_14]' value='[Extract].[v_14]' />
            <map key='[v_15]' value='[Extract].[v_15]' />
            <map key='[v_16]' value='[Extract].[v_16]' />
            <map key='[v_17]' value='[Extract].[v_17]' />
            <map key='[v_18]' value='[Extract].[v_18]' />
            <map key='[v_19]' value='[Extract].[v_19]' />
            <map key='[v_1]' value='[Extract].[v_110]' />
            <map key='[v_2 (Adult_Adolescent_Obesity)]' value='[Extract].[v_2]' />
            <map key='[v_20]' value='[Extract].[v_20]' />
            <map key='[v_21]' value='[Extract].[v_21]' />
            <map key='[v_22]' value='[Extract].[v_22]' />
            <map key='[v_23]' value='[Extract].[v_23]' />
            <map key='[v_24]' value='[Extract].[v_24]' />
            <map key='[v_25]' value='[Extract].[v_25]' />
            <map key='[v_26]' value='[Extract].[v_26]' />
            <map key='[v_27]' value='[Extract].[v_27]' />
            <map key='[v_28]' value='[Extract].[v_28]' />
            <map key='[v_29]' value='[Extract].[v_29]' />
            <map key='[v_2]' value='[Extract].[v_210]' />
            <map key='[v_30]' value='[Extract].[v_30]' />
            <map key='[v_3]' value='[Extract].[v_3]' />
            <map key='[v_4]' value='[Extract].[v_4]' />
            <map key='[v_5]' value='[Extract].[v_5]' />
            <map key='[v_6]' value='[Extract].[v_6]' />
            <map key='[v_7]' value='[Extract].[v_7]' />
            <map key='[v_8]' value='[Extract].[v_8]' />
            <map key='[v_9]' value='[Extract].[v_9]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5739' timestamp-start='2017-04-30 20:47:12.495' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (Adult_Adolescent_Obesity)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>0</ordinal>
              <family>Adult_Adolescent_Obesity</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5739</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_01</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_01</remote-alias>
              <ordinal>1</ordinal>
              <family>RiskFactors</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>177260.0</statistic>
                <statistic aggregation='Avg' datatype='real'>30.886914096532497</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>56</statistic>
                <statistic aggregation='Stdev' datatype='real'>15.104594132194865</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.103278114406946</statistic>
                <statistic aggregation='Var' datatype='real'>228.14876389833557</statistic>
                <statistic aggregation='VarP' datatype='real'>228.10900980112382</statistic>
                <statistic aggregation='Count' datatype='integer'>5739</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6784132.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_1 (Adult_Adolescent_Obesity)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>2</ordinal>
              <family>Adult_Adolescent_Obesity</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>78</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>130147.49999999716</statistic>
                <statistic aggregation='Avg' datatype='real'>22.67773131207478</statistic>
                <statistic aggregation='Min' datatype='real'>6.4000000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>35.899999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>8.8358082936312634</statistic>
                <statistic aggregation='StdevP' datatype='real'>8.8350384562703059</statistic>
                <statistic aggregation='Var' datatype='real'>78.071508201803013</statistic>
                <statistic aggregation='VarP' datatype='real'>78.057904523775179</statistic>
                <statistic aggregation='Count' datatype='integer'>5739</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3399424.3500001337</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_10</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_10</remote-alias>
              <ordinal>3</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>273</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>251157.5</statistic>
                <statistic aggregation='Avg' datatype='real'>72.799275362318838</statistic>
                <statistic aggregation='Min' datatype='real'>53.899999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>93.200000000000003</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.4282368008531234</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.4274500428519117</statistic>
                <statistic aggregation='Var' datatype='real'>29.465754766136151</statistic>
                <statistic aggregation='VarP' datatype='real'>29.457213967653214</statistic>
                <statistic aggregation='Count' datatype='integer'>3450</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>18385711.389999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>4</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>279</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>293967.99999999854</statistic>
                <statistic aggregation='Avg' datatype='real'>85.20811594202857</statistic>
                <statistic aggregation='Min' datatype='real'>68.099999999999994</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.8470108872798638</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.8461634329834675</statistic>
                <statistic aggregation='Var' datatype='real'>34.187536315969261</statistic>
                <statistic aggregation='VarP' datatype='real'>34.177626885153039</statistic>
                <statistic aggregation='Count' datatype='integer'>3450</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>25166372.239999909</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_12</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_12]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_12</remote-alias>
              <ordinal>5</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>264</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>97770.799999999886</statistic>
                <statistic aggregation='Avg' datatype='real'>24.266765946885055</statistic>
                <statistic aggregation='Min' datatype='real'>4.2000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>42.600000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.8692696048463251</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.8686652896587859</statistic>
                <statistic aggregation='Var' datatype='real'>23.709786484680286</statistic>
                <statistic aggregation='VarP' datatype='real'>23.703901702728267</statistic>
                <statistic aggregation='Count' datatype='integer'>4029</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2468084.1399999987</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_13</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_13]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_13</remote-alias>
              <ordinal>6</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>258</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>74366.30000000025</statistic>
                <statistic aggregation='Avg' datatype='real'>18.45775626706385</statistic>
                <statistic aggregation='Min' datatype='real'>0.80000000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>33.700000000000003</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.641770170629151</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.6411940899355733</statistic>
                <statistic aggregation='Var' datatype='real'>21.546030316942577</statistic>
                <statistic aggregation='VarP' datatype='real'>21.540682580452891</statistic>
                <statistic aggregation='Count' datatype='integer'>4029</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1459422.4499999995</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_14</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_14]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_14</remote-alias>
              <ordinal>7</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>307</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>121175.9000000001</statistic>
                <statistic aggregation='Avg' datatype='real'>30.075924547034028</statistic>
                <statistic aggregation='Min' datatype='real'>7.7000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>52.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.0706631035372922</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.069909685836155</statistic>
                <statistic aggregation='Var' datatype='real'>36.852950516649024</statistic>
                <statistic aggregation='VarP' datatype='real'>36.843803594207564</statistic>
                <statistic aggregation='Count' datatype='integer'>4029</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3792920.9100000057</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_15</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_15]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_15</remote-alias>
              <ordinal>8</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>261</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>72732.099999999773</statistic>
                <statistic aggregation='Avg' datatype='real'>26.690678899082485</statistic>
                <statistic aggregation='Min' datatype='real'>7.2000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>47.100000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.4753620913007381</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.4743573455190342</statistic>
                <statistic aggregation='Var' datatype='real'>29.979590030853196</statistic>
                <statistic aggregation='VarP' datatype='real'>29.968588346438203</statistic>
                <statistic aggregation='Count' datatype='integer'>2725</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2022933.5299999956</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_16</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_16]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_16</remote-alias>
              <ordinal>9</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>253</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>55643.500000000029</statistic>
                <statistic aggregation='Avg' datatype='real'>20.419633027522945</statistic>
                <statistic aggregation='Min' datatype='real'>0.59999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>37.299999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.22594691491408</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.2249879375842498</statistic>
                <statistic aggregation='Var' datatype='real'>27.310521157499991</statistic>
                <statistic aggregation='VarP' datatype='real'>27.300498947900909</statistic>
                <statistic aggregation='Count' datatype='integer'>2725</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1210613.7100000037</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_17</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_17]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_17</remote-alias>
              <ordinal>10</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>291</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>89818.499999999884</statistic>
                <statistic aggregation='Avg' datatype='real'>32.96091743119262</statistic>
                <statistic aggregation='Min' datatype='real'>13.9</statistic>
                <statistic aggregation='Max' datatype='real'>56.899999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.5687611089177667</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.5675557210538855</statistic>
                <statistic aggregation='Var' datatype='real'>43.14862250603057</statistic>
                <statistic aggregation='VarP' datatype='real'>43.132788149147622</statistic>
                <statistic aggregation='Count' datatype='integer'>2725</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3078037.0099999974</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_18</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_18]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_18</remote-alias>
              <ordinal>11</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>301</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>95363.200000000274</statistic>
                <statistic aggregation='Avg' datatype='real'>23.259317073170799</statistic>
                <statistic aggregation='Min' datatype='real'>3.6000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>46.200000000000003</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.7737452490118555</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.7730410907984906</statistic>
                <statistic aggregation='Var' datatype='real'>33.336134200486974</statistic>
                <statistic aggregation='VarP' datatype='real'>33.32800343604783</statistic>
                <statistic aggregation='Count' datatype='integer'>4100</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2354727.7200000039</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_19</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_19]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_19</remote-alias>
              <ordinal>12</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>292</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>71317.300000000047</statistic>
                <statistic aggregation='Avg' datatype='real'>17.394463414634156</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>38.299999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.6645808360105008</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.6638899913422796</statistic>
                <statistic aggregation='Var' datatype='real'>32.087476047697422</statistic>
                <statistic aggregation='VarP' datatype='real'>32.079649834027251</statistic>
                <statistic aggregation='Count' datatype='integer'>4100</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1372052.7300000011</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_110</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_110</remote-alias>
              <ordinal>13</ordinal>
              <family>RiskFactors</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>324</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>611060.0</statistic>
                <statistic aggregation='Avg' datatype='real'>106.47499564384039</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>840</statistic>
                <statistic aggregation='Stdev' datatype='real'>111.56318177467062</statistic>
                <statistic aggregation='StdevP' datatype='real'>111.55346161069882</statistic>
                <statistic aggregation='Var' datatype='real'>12446.343527688199</statistic>
                <statistic aggregation='VarP' datatype='real'>12444.174797329655</statistic>
                <statistic aggregation='Count' datatype='integer'>5739</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>136479730.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2 (Adult_Adolescent_Obesity)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>14</ordinal>
              <family>Adult_Adolescent_Obesity</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Adolescent&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Adult&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5739</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Adult&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_20</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_20]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_20</remote-alias>
              <ordinal>15</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>332</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>119408.59999999992</statistic>
                <statistic aggregation='Avg' datatype='real'>29.124048780487787</statistic>
                <statistic aggregation='Min' datatype='real'>4.9000000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>54.200000000000003</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.7456521247760675</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.7448294341059221</statistic>
                <statistic aggregation='Var' datatype='real'>45.503822588495872</statistic>
                <statistic aggregation='VarP' datatype='real'>45.492724095181607</statistic>
                <statistic aggregation='Count' datatype='integer'>4100</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3664182.0599999959</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_21</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_21]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_21</remote-alias>
              <ordinal>16</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>166</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>39146.200000000055</statistic>
                <statistic aggregation='Avg' datatype='real'>7.9035332121946409</statistic>
                <statistic aggregation='Min' datatype='real'>0.5</statistic>
                <statistic aggregation='Max' datatype='real'>20.800000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.77055353966534</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.7702738411597898</statistic>
                <statistic aggregation='Var' datatype='real'>7.6759669161521442</statistic>
                <statistic aggregation='VarP' datatype='real'>7.6744171550142175</statistic>
                <statistic aggregation='Count' datatype='integer'>4953</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>347404.6799999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_22</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_22]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_22</remote-alias>
              <ordinal>17</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>106</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>20097.0</statistic>
                <statistic aggregation='Avg' datatype='real'>4.0575408843125382</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>12.300000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2215905630971942</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.2213662846086013</statistic>
                <statistic aggregation='Var' datatype='real'>4.9354646300425085</statistic>
                <statistic aggregation='VarP' datatype='real'>4.9344681703958209</statistic>
                <statistic aggregation='Count' datatype='integer'>4953</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>105984.81999999957</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_23</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_23]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_23</remote-alias>
              <ordinal>18</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>228</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>58346.599999999969</statistic>
                <statistic aggregation='Avg' datatype='real'>11.780052493438314</statistic>
                <statistic aggregation='Min' datatype='real'>1.1000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>30.199999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.2700049275441101</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.2695738533996028</statistic>
                <statistic aggregation='Var' datatype='real'>18.232942081250982</statistic>
                <statistic aggregation='VarP' datatype='real'>18.22926088963353</statistic>
                <statistic aggregation='Count' datatype='integer'>4953</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>777615.54000000248</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_24</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_24]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_24</remote-alias>
              <ordinal>19</ordinal>
              <family>RiskFactors</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2726</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>68542695.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11951.646904969486</statistic>
                <statistic aggregation='Min' datatype='integer'>11</statistic>
                <statistic aggregation='Max' datatype='integer'>2167891</statistic>
                <statistic aggregation='Stdev' datatype='real'>47495.571561764787</statistic>
                <statistic aggregation='StdevP' datatype='real'>47491.430529317688</statistic>
                <statistic aggregation='Var' datatype='real'>2255829317.9787202</statistic>
                <statistic aggregation='VarP' datatype='real'>2255435973.7210083</statistic>
                <statistic aggregation='Count' datatype='integer'>5735</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>13754123397845.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_25</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_25]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_25</remote-alias>
              <ordinal>20</ordinal>
              <family>RiskFactors</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2718</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>59711068.0</statistic>
                <statistic aggregation='Avg' datatype='real'>10512.511971830985</statistic>
                <statistic aggregation='Min' datatype='integer'>11</statistic>
                <statistic aggregation='Max' datatype='integer'>911590</statistic>
                <statistic aggregation='Stdev' datatype='real'>29165.544610578127</statistic>
                <statistic aggregation='StdevP' datatype='real'>29162.977108076513</statistic>
                <statistic aggregation='Var' datatype='real'>850628992.43162286</statistic>
                <statistic aggregation='VarP' datatype='real'>850479233.80619466</statistic>
                <statistic aggregation='Count' datatype='integer'>5680</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5458435365220.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_26</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_26]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_26</remote-alias>
              <ordinal>21</ordinal>
              <family>RiskFactors</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1823</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10504318.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1850.0031701303276</statistic>
                <statistic aggregation='Min' datatype='integer'>12</statistic>
                <statistic aggregation='Max' datatype='integer'>118190</statistic>
                <statistic aggregation='Stdev' datatype='real'>4455.5520831515423</statistic>
                <statistic aggregation='StdevP' datatype='real'>4455.1597136308883</statistic>
                <statistic aggregation='Var' datatype='real'>19851944.365676049</statistic>
                <statistic aggregation='VarP' datatype='real'>19848448.073959656</statistic>
                <statistic aggregation='Count' datatype='integer'>5678</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>132132509764.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_27</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_27]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_27</remote-alias>
              <ordinal>22</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1133</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>326775.19999999937</statistic>
                <statistic aggregation='Avg' datatype='real'>56.939397107509912</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>581.20000000000005</statistic>
                <statistic aggregation='Stdev' datatype='real'>44.719395255416082</statistic>
                <statistic aggregation='StdevP' datatype='real'>44.715498989213486</statistic>
                <statistic aggregation='Var' datatype='real'>1999.8243120101304</statistic>
                <statistic aggregation='VarP' datatype='real'>1999.4758498543524</statistic>
                <statistic aggregation='Count' datatype='integer'>5739</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>30081374.780000065</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_28</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_28]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_28</remote-alias>
              <ordinal>23</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>705</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>181052.3999999997</statistic>
                <statistic aggregation='Avg' datatype='real'>31.553224119902353</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>377.89999999999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>21.672347131354769</statistic>
                <statistic aggregation='StdevP' datatype='real'>21.670458555939973</statistic>
                <statistic aggregation='Var' datatype='real'>469.69063018194129</statistic>
                <statistic aggregation='VarP' datatype='real'>469.60877402471198</statistic>
                <statistic aggregation='Count' datatype='integer'>5738</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>8407402.0999999959</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_29</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_29]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_29</remote-alias>
              <ordinal>24</ordinal>
              <family>RiskFactors</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>8883.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.5478306325143754</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>2</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.49775034010648833</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.49770697261870339</statistic>
                <statistic aggregation='Var' datatype='real'>0.24775540107612479</statistic>
                <statistic aggregation='VarP' datatype='real'>0.24771223059327477</statistic>
                <statistic aggregation='Count' datatype='integer'>5739</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>15171.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_210</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_210</remote-alias>
              <ordinal>25</ordinal>
              <family>RiskFactors</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1847</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abbeville&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Ziebach&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5739</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_30</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_30]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_30</remote-alias>
              <ordinal>26</ordinal>
              <family>RiskFactors</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10027.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.7471684962537026</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>2</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.43467304573204751</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.43463517397891688</statistic>
                <statistic aggregation='Var' datatype='real'>0.18894065668597468</statistic>
                <statistic aggregation='VarP' datatype='real'>0.18890773445968334</statistic>
                <statistic aggregation='Count' datatype='integer'>5739</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>18603.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>27</ordinal>
              <family>RiskFactors</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5739</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>28</ordinal>
              <family>RiskFactors</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5739</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>29</ordinal>
              <family>RiskFactors</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>88</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>259891.0</statistic>
                <statistic aggregation='Avg' datatype='real'>45.285067084857992</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>88</statistic>
                <statistic aggregation='Stdev' datatype='real'>25.184781148688778</statistic>
                <statistic aggregation='StdevP' datatype='real'>25.182586874570156</statistic>
                <statistic aggregation='Var' datatype='real'>634.27320150734965</statistic>
                <statistic aggregation='VarP' datatype='real'>634.16268169527314</statistic>
                <statistic aggregation='Count' datatype='integer'>5739</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>15408641.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>30</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>331</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>107404.09999999971</statistic>
                <statistic aggregation='Avg' datatype='real'>26.911576046103661</statistic>
                <statistic aggregation='Min' datatype='real'>8.3000000000000007</statistic>
                <statistic aggregation='Max' datatype='real'>52.399999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.6526514055285437</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.6518178966102157</statistic>
                <statistic aggregation='Var' datatype='real'>44.25777072348091</statistic>
                <statistic aggregation='VarP' datatype='real'>44.24668132966395</statistic>
                <statistic aggregation='Count' datatype='integer'>3991</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3067002.1100000036</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>31</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>318</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>83990.400000000125</statistic>
                <statistic aggregation='Avg' datatype='real'>21.044951140065177</statistic>
                <statistic aggregation='Min' datatype='real'>1.8999999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>43.600000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.0680930550444288</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.067332785285755</statistic>
                <statistic aggregation='Var' datatype='real'>36.821753324678433</statistic>
                <statistic aggregation='VarP' datatype='real'>36.812527127403399</statistic>
                <statistic aggregation='Count' datatype='integer'>3991</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1914492.6599999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_8</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_8</remote-alias>
              <ordinal>32</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>374</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>130821.10000000018</statistic>
                <statistic aggregation='Avg' datatype='real'>32.779027812578349</statistic>
                <statistic aggregation='Min' datatype='real'>11.699999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>61.200000000000003</statistic>
                <statistic aggregation='Stdev' datatype='real'>7.9498054803190934</statistic>
                <statistic aggregation='StdevP' datatype='real'>7.9488094513130774</statistic>
                <statistic aggregation='Var' datatype='real'>63.199407174911492</statistic>
                <statistic aggregation='VarP' datatype='real'>63.183571693284101</statistic>
                <statistic aggregation='Count' datatype='integer'>3991</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4540354.1099999957</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_9</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_9</remote-alias>
              <ordinal>33</ordinal>
              <family>RiskFactors</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>262</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>272563.09999999939</statistic>
                <statistic aggregation='Avg' datatype='real'>79.003797101449095</statistic>
                <statistic aggregation='Min' datatype='real'>63.100000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>96.400000000000006</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.1928536732405215</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.1921010312084155</statistic>
                <statistic aggregation='Var' datatype='real'>26.965729271687575</statistic>
                <statistic aggregation='VarP' datatype='real'>26.957913118275492</statistic>
                <statistic aggregation='Count' datatype='integer'>3450</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>21626524.649999984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.415385' group-percentage='0.0505495' measure-ordering='alphabetic' measure-percentage='0.534066' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_12:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_20:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_21:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_21:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_18:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_30:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_6:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_16:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_5:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601016590342:qk:1]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_22:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_27:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_15:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_17:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601014595589:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_1:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_23:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_26:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_1 (Adult_Adolescent_Obesity):qk]:1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601001594883:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601023254538:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_6:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_8:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_24:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_7:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601022689287:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_13:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601022877704:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_29:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_28:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_15:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_18:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_1 (Adult_Adolescent_Obesity):qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_14:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_9:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_25:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601001488386:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601023086601:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_0:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_10:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_19:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_11:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_9:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg Diabetes KPI'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;christinalien/s-17-dv-final-project&quot;' name='federated.0wxqiao0ni8qwz1fno2qb0rnejzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0wxqiao0ni8qwz1fno2qb0rnejzm'>
            <column caption='Calculated Diff Diabetes' datatype='real' name='[Calculation_611926601016590342]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([v_21])-7.45' />
            </column>
            <column-instance column='[v_1 (Adult_Adolescent_Obesity)]' derivation='Avg' name='[avg:v_1 (Adult_Adolescent_Obesity):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_21]' derivation='Avg' name='[avg:v_21:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Top 10 Obesity Rates]' derivation='InOut' name='[io:Top 10 Obesity Rates:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (Adult_Adolescent_Obesity)]' derivation='None' name='[none:v_0 (Adult_Adolescent_Obesity):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_611926601016590342]' derivation='User' name='[usr:Calculation_611926601016590342:qk:1]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[v_0 (Adult_Adolescent_Obesity)]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[v_1 (Adult_Adolescent_Obesity)]' role='measure' type='quantitative' />
            <column caption='Diabetes' datatype='real' name='[v_21]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_21:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]'>
            <groupfilter function='member' level='[io:Top 10 Obesity Rates:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]</column>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='Avg. Obesity Rates' />
            <format attr='subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601016590342:qk:1]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_21:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='7.4500000000000002' value-column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_21:qk]' z-order='2' />
          </pane>
          <pane id='1' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_21:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601016590342:qk:1]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_21:qk] + [federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk])</rows>
        <cols>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Avg Few Fruits/Veg KPI'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;christinalien/s-17-dv-final-project&quot;' name='federated.0wxqiao0ni8qwz1fno2qb0rnejzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0wxqiao0ni8qwz1fno2qb0rnejzm'>
            <column caption='Calculated Diff Fruits/Veg' datatype='real' name='[Calculation_611926601022689287]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([v_9])-77.41' />
            </column>
            <column-instance column='[v_1 (Adult_Adolescent_Obesity)]' derivation='Avg' name='[avg:v_1 (Adult_Adolescent_Obesity):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_9]' derivation='Avg' name='[avg:v_9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Top 10 Obesity Rates]' derivation='InOut' name='[io:Top 10 Obesity Rates:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (Adult_Adolescent_Obesity)]' derivation='None' name='[none:v_0 (Adult_Adolescent_Obesity):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_1 (Adult_Adolescent_Obesity)]' derivation='Sum' name='[sum:v_1 (Adult_Adolescent_Obesity):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_611926601022689287]' derivation='User' name='[usr:Calculation_611926601022689287:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[v_0 (Adult_Adolescent_Obesity)]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[v_1 (Adult_Adolescent_Obesity)]' role='measure' type='quantitative' />
            <column caption='Few_Fruit_Veg' datatype='real' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601022689287:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[sum:v_1 (Adult_Adolescent_Obesity):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]'>
            <groupfilter function='member' level='[io:Top 10 Obesity Rates:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]</column>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='Avg. Obesity Rates' />
            <format attr='subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601022689287:qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_9:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label-type='automatic' scope='per-table' value='77.409999999999997' value-column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_9:qk]' z-order='1' />
          </pane>
          <pane id='2' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_9:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601022689287:qk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_9:qk] + [federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk])</rows>
        <cols>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Avg High Blood Pressure KPI'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;christinalien/s-17-dv-final-project&quot;' name='federated.0wxqiao0ni8qwz1fno2qb0rnejzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0wxqiao0ni8qwz1fno2qb0rnejzm'>
            <column caption='Calculated Diff High Blood Pressure' datatype='real' name='[Calculation_611926601022877704]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([v_15])-26.16' />
            </column>
            <column-instance column='[v_1 (Adult_Adolescent_Obesity)]' derivation='Avg' name='[avg:v_1 (Adult_Adolescent_Obesity):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_15]' derivation='Avg' name='[avg:v_15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Top 10 Obesity Rates]' derivation='InOut' name='[io:Top 10 Obesity Rates:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (Adult_Adolescent_Obesity)]' derivation='None' name='[none:v_0 (Adult_Adolescent_Obesity):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_611926601022877704]' derivation='User' name='[usr:Calculation_611926601022877704:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[v_0 (Adult_Adolescent_Obesity)]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[v_1 (Adult_Adolescent_Obesity)]' role='measure' type='quantitative' />
            <column caption='High_Blood_Pres' datatype='real' name='[v_15]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]'>
            <groupfilter function='member' level='[io:Top 10 Obesity Rates:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='Avg. Obesity Rates' />
            <format attr='subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601022877704:qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_15:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='26.16' value-column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_15:qk]' z-order='1' />
          </pane>
          <pane id='1' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_15:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601022877704:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_15:qk] + [federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk])</rows>
        <cols>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Avg No Exercise KPI'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;christinalien/s-17-dv-final-project&quot;' name='federated.0wxqiao0ni8qwz1fno2qb0rnejzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0wxqiao0ni8qwz1fno2qb0rnejzm'>
            <column caption='Calculated Diff No Exercise' datatype='real' name='[Calculation_611926601023086601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([v_6])-25.15' />
            </column>
            <column-instance column='[v_1 (Adult_Adolescent_Obesity)]' derivation='Avg' name='[avg:v_1 (Adult_Adolescent_Obesity):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_6]' derivation='Avg' name='[avg:v_6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Top 10 Obesity Rates]' derivation='InOut' name='[io:Top 10 Obesity Rates:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (Adult_Adolescent_Obesity)]' derivation='None' name='[none:v_0 (Adult_Adolescent_Obesity):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_611926601023086601]' derivation='User' name='[usr:Calculation_611926601023086601:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[v_0 (Adult_Adolescent_Obesity)]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[v_1 (Adult_Adolescent_Obesity)]' role='measure' type='quantitative' />
            <column caption='No_Exercise' datatype='real' name='[v_6]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]'>
            <groupfilter function='member' level='[io:Top 10 Obesity Rates:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='Avg. Obesity Rates' />
            <format attr='subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601023086601:qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_6:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='25.149999999999999' value-column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_6:qk]' z-order='1' />
          </pane>
          <pane id='1' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_6:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601023086601:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_6:qk] + [federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk])</rows>
        <cols>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Avg Smoker KPI'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;christinalien/s-17-dv-final-project&quot;' name='federated.0wxqiao0ni8qwz1fno2qb0rnejzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0wxqiao0ni8qwz1fno2qb0rnejzm'>
            <column caption='Calculated Diff Smoker' datatype='real' name='[Calculation_611926601023254538]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([v_18])-22.33' />
            </column>
            <column-instance column='[v_1 (Adult_Adolescent_Obesity)]' derivation='Avg' name='[avg:v_1 (Adult_Adolescent_Obesity):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_18]' derivation='Avg' name='[avg:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Top 10 Obesity Rates]' derivation='InOut' name='[io:Top 10 Obesity Rates:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (Adult_Adolescent_Obesity)]' derivation='None' name='[none:v_0 (Adult_Adolescent_Obesity):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_611926601023254538]' derivation='User' name='[usr:Calculation_611926601023254538:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[v_0 (Adult_Adolescent_Obesity)]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[v_1 (Adult_Adolescent_Obesity)]' role='measure' type='quantitative' />
            <column caption='Smoker' datatype='real' name='[v_18]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]'>
            <groupfilter function='member' level='[io:Top 10 Obesity Rates:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='Avg. Obesity Rates' />
            <format attr='subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601023254538:qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_18:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='22.329999999999998' value-column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_18:qk]' z-order='1' />
          </pane>
          <pane id='1' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_18:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601023254538:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_18:qk] + [federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk])</rows>
        <cols>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Barchart of Risk Factors vs Obesity Rates by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;christinalien/s-17-dv-final-project&quot;' name='federated.0wxqiao0ni8qwz1fno2qb0rnejzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0wxqiao0ni8qwz1fno2qb0rnejzm'>
            <column caption='Index' datatype='string' name='[Calculation_611926600994254849]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [v_4]=&quot;AL&quot; or [v_4]=&quot;AK&quot; or [v_4]=&quot;AZ&quot; or [v_4]=&quot;AR&quot; or [v_4]=&quot;CA&quot; or [v_4]=&quot;CO&quot; or [v_4]=&quot;CT&quot; or [v_4]=&quot;DE&quot; or [v_4]=&quot;FL&quot; or [v_4]=&quot;GA&quot; THEN &quot;01&quot;&#13;&#10;ELSEIF [v_4]=&quot;HI&quot; or [v_4]=&quot;ID&quot; or [v_4]=&quot;IL&quot; or [v_4]=&quot;IN&quot; or [v_4]=&quot;IA&quot; or [v_4]=&quot;KS&quot; or [v_4]=&quot;KY&quot; or [v_4]=&quot;LA&quot; or [v_4]=&quot;ME&quot; or [v_4]=&quot;MD&quot; THEN &quot;02&quot;&#13;&#10;ELSEIF [v_4]=&quot;MA&quot; or [v_4]=&quot;MI&quot; or [v_4]=&quot;MN&quot; or [v_4]=&quot;MS&quot; or [v_4]=&quot;MO&quot; or [v_4]=&quot;MT&quot; or [v_4]=&quot;NE&quot; or [v_4]=&quot;NV&quot; or [v_4]=&quot;NH&quot; or [v_4]=&quot;NJ&quot; THEN &quot;03&quot;&#13;&#10;ELSEIF [v_4]=&quot;NM&quot; or [v_4]=&quot;NY&quot; or [v_4]=&quot;NC&quot; or [v_4]=&quot;ND&quot; or [v_4]=&quot;OH&quot; or [v_4]=&quot;OK&quot; or [v_4]=&quot;OR&quot; or [v_4]=&quot;PA&quot; or [v_4]=&quot;RI&quot; or [v_4]=&quot;SC&quot; THEN &quot;04&quot;&#13;&#10;ELSE &quot;05&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[v_1 (Adult_Adolescent_Obesity)]' derivation='Avg' name='[avg:v_1 (Adult_Adolescent_Obesity):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_15]' derivation='Avg' name='[avg:v_15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_18]' derivation='Avg' name='[avg:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_21]' derivation='Avg' name='[avg:v_21:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_6]' derivation='Avg' name='[avg:v_6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_9]' derivation='Avg' name='[avg:v_9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_611926600994254849]' derivation='None' name='[none:Calculation_611926600994254849:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (Adult_Adolescent_Obesity)]' derivation='None' name='[none:v_0 (Adult_Adolescent_Obesity):nk]' pivot='key' type='nominal' />
            <column caption='Location' datatype='string' name='[v_0 (Adult_Adolescent_Obesity)]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[v_1 (Adult_Adolescent_Obesity)]' role='measure' type='quantitative' />
            <column caption='High_Blood_Pres' datatype='real' name='[v_15]' role='measure' type='quantitative' />
            <column caption='Smoker' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Diabetes' datatype='real' name='[v_21]' role='measure' type='quantitative' />
            <column caption='CHSI_State_Abbr' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='No_Exercise' datatype='real' name='[v_6]' role='measure' type='quantitative' />
            <column caption='Few_Fruit_Veg' datatype='real' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_21:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_15:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_18:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:Calculation_611926600994254849:nk]'>
            <groupfilter function='member' level='[none:Calculation_611926600994254849:nk]' member='&quot;01&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:v_0 (Adult_Adolescent_Obesity):nk]' to='&quot;Delaware&quot;' />
              <groupfilter from='&quot;Florida&quot;' function='range' level='[none:v_0 (Adult_Adolescent_Obesity):nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]</column>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</column>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:Calculation_611926600994254849:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='Avg. Obesity Rates' />
            <format attr='subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='wrap' value='auto' />
            <format attr='vertical-align' value='auto' />
            <format attr='wrap' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
            <format attr='display' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:Calculation_611926600994254849:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[Multiple Values] + [federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk])</rows>
        <cols>([federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk] / [federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;christinalien/s-17-dv-final-project&quot;' name='federated.0wxqiao0ni8qwz1fno2qb0rnejzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0wxqiao0ni8qwz1fno2qb0rnejzm'>
            <column caption='Index' datatype='string' name='[Calculation_611926600994254849]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [v_4]=&quot;AL&quot; or [v_4]=&quot;AK&quot; or [v_4]=&quot;AZ&quot; or [v_4]=&quot;AR&quot; or [v_4]=&quot;CA&quot; or [v_4]=&quot;CO&quot; or [v_4]=&quot;CT&quot; or [v_4]=&quot;DE&quot; or [v_4]=&quot;FL&quot; or [v_4]=&quot;GA&quot; THEN &quot;01&quot;&#13;&#10;ELSEIF [v_4]=&quot;HI&quot; or [v_4]=&quot;ID&quot; or [v_4]=&quot;IL&quot; or [v_4]=&quot;IN&quot; or [v_4]=&quot;IA&quot; or [v_4]=&quot;KS&quot; or [v_4]=&quot;KY&quot; or [v_4]=&quot;LA&quot; or [v_4]=&quot;ME&quot; or [v_4]=&quot;MD&quot; THEN &quot;02&quot;&#13;&#10;ELSEIF [v_4]=&quot;MA&quot; or [v_4]=&quot;MI&quot; or [v_4]=&quot;MN&quot; or [v_4]=&quot;MS&quot; or [v_4]=&quot;MO&quot; or [v_4]=&quot;MT&quot; or [v_4]=&quot;NE&quot; or [v_4]=&quot;NV&quot; or [v_4]=&quot;NH&quot; or [v_4]=&quot;NJ&quot; THEN &quot;03&quot;&#13;&#10;ELSEIF [v_4]=&quot;NM&quot; or [v_4]=&quot;NY&quot; or [v_4]=&quot;NC&quot; or [v_4]=&quot;ND&quot; or [v_4]=&quot;OH&quot; or [v_4]=&quot;OK&quot; or [v_4]=&quot;OR&quot; or [v_4]=&quot;PA&quot; or [v_4]=&quot;RI&quot; or [v_4]=&quot;SC&quot; THEN &quot;04&quot;&#13;&#10;ELSE &quot;05&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[v_1 (Adult_Adolescent_Obesity)]' derivation='Avg' name='[avg:v_1 (Adult_Adolescent_Obesity):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_15]' derivation='Avg' name='[avg:v_15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_18]' derivation='Avg' name='[avg:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_21]' derivation='Avg' name='[avg:v_21:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_6]' derivation='Avg' name='[avg:v_6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_9]' derivation='Avg' name='[avg:v_9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_611926600994254849]' derivation='None' name='[none:Calculation_611926600994254849:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (Adult_Adolescent_Obesity)]' derivation='None' name='[none:v_0 (Adult_Adolescent_Obesity):nk]' pivot='key' type='nominal' />
            <column caption='Location' datatype='string' name='[v_0 (Adult_Adolescent_Obesity)]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[v_1 (Adult_Adolescent_Obesity)]' role='measure' type='quantitative' />
            <column caption='High_Blood_Pres' datatype='real' name='[v_15]' role='measure' type='quantitative' />
            <column caption='Smoker' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Diabetes' datatype='real' name='[v_21]' role='measure' type='quantitative' />
            <column caption='CHSI_State_Abbr' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='No_Exercise' datatype='real' name='[v_6]' role='measure' type='quantitative' />
            <column caption='Few_Fruit_Veg' datatype='real' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_21:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_15:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_18:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:Calculation_611926600994254849:nk]'>
            <groupfilter function='member' level='[none:Calculation_611926600994254849:nk]' member='&quot;02&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:v_0 (Adult_Adolescent_Obesity):nk]' to='&quot;Delaware&quot;' />
              <groupfilter from='&quot;Florida&quot;' function='range' level='[none:v_0 (Adult_Adolescent_Obesity):nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]</column>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</column>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:Calculation_611926600994254849:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='Avg. Obesity Rates' />
            <format attr='subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='wrap' value='auto' />
            <format attr='vertical-align' value='auto' />
            <format attr='wrap' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
            <format attr='display' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:Calculation_611926600994254849:nk]' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[Multiple Values] + [federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk])</rows>
        <cols>([federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk] / [federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;christinalien/s-17-dv-final-project&quot;' name='federated.0wxqiao0ni8qwz1fno2qb0rnejzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0wxqiao0ni8qwz1fno2qb0rnejzm'>
            <column caption='Index' datatype='string' name='[Calculation_611926600994254849]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [v_4]=&quot;AL&quot; or [v_4]=&quot;AK&quot; or [v_4]=&quot;AZ&quot; or [v_4]=&quot;AR&quot; or [v_4]=&quot;CA&quot; or [v_4]=&quot;CO&quot; or [v_4]=&quot;CT&quot; or [v_4]=&quot;DE&quot; or [v_4]=&quot;FL&quot; or [v_4]=&quot;GA&quot; THEN &quot;01&quot;&#13;&#10;ELSEIF [v_4]=&quot;HI&quot; or [v_4]=&quot;ID&quot; or [v_4]=&quot;IL&quot; or [v_4]=&quot;IN&quot; or [v_4]=&quot;IA&quot; or [v_4]=&quot;KS&quot; or [v_4]=&quot;KY&quot; or [v_4]=&quot;LA&quot; or [v_4]=&quot;ME&quot; or [v_4]=&quot;MD&quot; THEN &quot;02&quot;&#13;&#10;ELSEIF [v_4]=&quot;MA&quot; or [v_4]=&quot;MI&quot; or [v_4]=&quot;MN&quot; or [v_4]=&quot;MS&quot; or [v_4]=&quot;MO&quot; or [v_4]=&quot;MT&quot; or [v_4]=&quot;NE&quot; or [v_4]=&quot;NV&quot; or [v_4]=&quot;NH&quot; or [v_4]=&quot;NJ&quot; THEN &quot;03&quot;&#13;&#10;ELSEIF [v_4]=&quot;NM&quot; or [v_4]=&quot;NY&quot; or [v_4]=&quot;NC&quot; or [v_4]=&quot;ND&quot; or [v_4]=&quot;OH&quot; or [v_4]=&quot;OK&quot; or [v_4]=&quot;OR&quot; or [v_4]=&quot;PA&quot; or [v_4]=&quot;RI&quot; or [v_4]=&quot;SC&quot; THEN &quot;04&quot;&#13;&#10;ELSE &quot;05&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[v_1 (Adult_Adolescent_Obesity)]' derivation='Avg' name='[avg:v_1 (Adult_Adolescent_Obesity):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_15]' derivation='Avg' name='[avg:v_15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_18]' derivation='Avg' name='[avg:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_21]' derivation='Avg' name='[avg:v_21:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_6]' derivation='Avg' name='[avg:v_6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_9]' derivation='Avg' name='[avg:v_9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_611926600994254849]' derivation='None' name='[none:Calculation_611926600994254849:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (Adult_Adolescent_Obesity)]' derivation='None' name='[none:v_0 (Adult_Adolescent_Obesity):nk]' pivot='key' type='nominal' />
            <column caption='Location' datatype='string' name='[v_0 (Adult_Adolescent_Obesity)]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[v_1 (Adult_Adolescent_Obesity)]' role='measure' type='quantitative' />
            <column caption='High_Blood_Pres' datatype='real' name='[v_15]' role='measure' type='quantitative' />
            <column caption='Smoker' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Diabetes' datatype='real' name='[v_21]' role='measure' type='quantitative' />
            <column caption='CHSI_State_Abbr' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='No_Exercise' datatype='real' name='[v_6]' role='measure' type='quantitative' />
            <column caption='Few_Fruit_Veg' datatype='real' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_21:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_15:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_18:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:Calculation_611926600994254849:nk]'>
            <groupfilter function='member' level='[none:Calculation_611926600994254849:nk]' member='&quot;03&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:v_0 (Adult_Adolescent_Obesity):nk]' to='&quot;Delaware&quot;' />
              <groupfilter from='&quot;Florida&quot;' function='range' level='[none:v_0 (Adult_Adolescent_Obesity):nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]</column>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</column>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:Calculation_611926600994254849:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='Avg. Obesity Rates' />
            <format attr='subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='wrap' value='auto' />
            <format attr='vertical-align' value='auto' />
            <format attr='wrap' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
            <format attr='display' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:Calculation_611926600994254849:nk]' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[Multiple Values] + [federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk])</rows>
        <cols>([federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk] / [federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;christinalien/s-17-dv-final-project&quot;' name='federated.0wxqiao0ni8qwz1fno2qb0rnejzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0wxqiao0ni8qwz1fno2qb0rnejzm'>
            <column caption='Index' datatype='string' name='[Calculation_611926600994254849]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [v_4]=&quot;AL&quot; or [v_4]=&quot;AK&quot; or [v_4]=&quot;AZ&quot; or [v_4]=&quot;AR&quot; or [v_4]=&quot;CA&quot; or [v_4]=&quot;CO&quot; or [v_4]=&quot;CT&quot; or [v_4]=&quot;DE&quot; or [v_4]=&quot;FL&quot; or [v_4]=&quot;GA&quot; THEN &quot;01&quot;&#13;&#10;ELSEIF [v_4]=&quot;HI&quot; or [v_4]=&quot;ID&quot; or [v_4]=&quot;IL&quot; or [v_4]=&quot;IN&quot; or [v_4]=&quot;IA&quot; or [v_4]=&quot;KS&quot; or [v_4]=&quot;KY&quot; or [v_4]=&quot;LA&quot; or [v_4]=&quot;ME&quot; or [v_4]=&quot;MD&quot; THEN &quot;02&quot;&#13;&#10;ELSEIF [v_4]=&quot;MA&quot; or [v_4]=&quot;MI&quot; or [v_4]=&quot;MN&quot; or [v_4]=&quot;MS&quot; or [v_4]=&quot;MO&quot; or [v_4]=&quot;MT&quot; or [v_4]=&quot;NE&quot; or [v_4]=&quot;NV&quot; or [v_4]=&quot;NH&quot; or [v_4]=&quot;NJ&quot; THEN &quot;03&quot;&#13;&#10;ELSEIF [v_4]=&quot;NM&quot; or [v_4]=&quot;NY&quot; or [v_4]=&quot;NC&quot; or [v_4]=&quot;ND&quot; or [v_4]=&quot;OH&quot; or [v_4]=&quot;OK&quot; or [v_4]=&quot;OR&quot; or [v_4]=&quot;PA&quot; or [v_4]=&quot;RI&quot; or [v_4]=&quot;SC&quot; THEN &quot;04&quot;&#13;&#10;ELSE &quot;05&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[v_1 (Adult_Adolescent_Obesity)]' derivation='Avg' name='[avg:v_1 (Adult_Adolescent_Obesity):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_15]' derivation='Avg' name='[avg:v_15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_18]' derivation='Avg' name='[avg:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_21]' derivation='Avg' name='[avg:v_21:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_6]' derivation='Avg' name='[avg:v_6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_9]' derivation='Avg' name='[avg:v_9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_611926600994254849]' derivation='None' name='[none:Calculation_611926600994254849:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (Adult_Adolescent_Obesity)]' derivation='None' name='[none:v_0 (Adult_Adolescent_Obesity):nk]' pivot='key' type='nominal' />
            <column caption='Location' datatype='string' name='[v_0 (Adult_Adolescent_Obesity)]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[v_1 (Adult_Adolescent_Obesity)]' role='measure' type='quantitative' />
            <column caption='High_Blood_Pres' datatype='real' name='[v_15]' role='measure' type='quantitative' />
            <column caption='Smoker' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Diabetes' datatype='real' name='[v_21]' role='measure' type='quantitative' />
            <column caption='CHSI_State_Abbr' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='No_Exercise' datatype='real' name='[v_6]' role='measure' type='quantitative' />
            <column caption='Few_Fruit_Veg' datatype='real' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_21:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_15:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_18:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:Calculation_611926600994254849:nk]'>
            <groupfilter function='member' level='[none:Calculation_611926600994254849:nk]' member='&quot;04&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:v_0 (Adult_Adolescent_Obesity):nk]' to='&quot;Delaware&quot;' />
              <groupfilter from='&quot;Florida&quot;' function='range' level='[none:v_0 (Adult_Adolescent_Obesity):nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]</column>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</column>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:Calculation_611926600994254849:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='Avg. Obesity Rates' />
            <format attr='subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='wrap' value='auto' />
            <format attr='vertical-align' value='auto' />
            <format attr='wrap' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
            <format attr='display' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:Calculation_611926600994254849:nk]' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[Multiple Values] + [federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk])</rows>
        <cols>([federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk] / [federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;christinalien/s-17-dv-final-project&quot;' name='federated.0wxqiao0ni8qwz1fno2qb0rnejzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0wxqiao0ni8qwz1fno2qb0rnejzm'>
            <column caption='Index' datatype='string' name='[Calculation_611926600994254849]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [v_4]=&quot;AL&quot; or [v_4]=&quot;AK&quot; or [v_4]=&quot;AZ&quot; or [v_4]=&quot;AR&quot; or [v_4]=&quot;CA&quot; or [v_4]=&quot;CO&quot; or [v_4]=&quot;CT&quot; or [v_4]=&quot;DE&quot; or [v_4]=&quot;FL&quot; or [v_4]=&quot;GA&quot; THEN &quot;01&quot;&#13;&#10;ELSEIF [v_4]=&quot;HI&quot; or [v_4]=&quot;ID&quot; or [v_4]=&quot;IL&quot; or [v_4]=&quot;IN&quot; or [v_4]=&quot;IA&quot; or [v_4]=&quot;KS&quot; or [v_4]=&quot;KY&quot; or [v_4]=&quot;LA&quot; or [v_4]=&quot;ME&quot; or [v_4]=&quot;MD&quot; THEN &quot;02&quot;&#13;&#10;ELSEIF [v_4]=&quot;MA&quot; or [v_4]=&quot;MI&quot; or [v_4]=&quot;MN&quot; or [v_4]=&quot;MS&quot; or [v_4]=&quot;MO&quot; or [v_4]=&quot;MT&quot; or [v_4]=&quot;NE&quot; or [v_4]=&quot;NV&quot; or [v_4]=&quot;NH&quot; or [v_4]=&quot;NJ&quot; THEN &quot;03&quot;&#13;&#10;ELSEIF [v_4]=&quot;NM&quot; or [v_4]=&quot;NY&quot; or [v_4]=&quot;NC&quot; or [v_4]=&quot;ND&quot; or [v_4]=&quot;OH&quot; or [v_4]=&quot;OK&quot; or [v_4]=&quot;OR&quot; or [v_4]=&quot;PA&quot; or [v_4]=&quot;RI&quot; or [v_4]=&quot;SC&quot; THEN &quot;04&quot;&#13;&#10;ELSE &quot;05&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[v_1 (Adult_Adolescent_Obesity)]' derivation='Avg' name='[avg:v_1 (Adult_Adolescent_Obesity):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_15]' derivation='Avg' name='[avg:v_15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_18]' derivation='Avg' name='[avg:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_21]' derivation='Avg' name='[avg:v_21:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_6]' derivation='Avg' name='[avg:v_6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_9]' derivation='Avg' name='[avg:v_9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_611926600994254849]' derivation='None' name='[none:Calculation_611926600994254849:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (Adult_Adolescent_Obesity)]' derivation='None' name='[none:v_0 (Adult_Adolescent_Obesity):nk]' pivot='key' type='nominal' />
            <column caption='Location' datatype='string' name='[v_0 (Adult_Adolescent_Obesity)]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[v_1 (Adult_Adolescent_Obesity)]' role='measure' type='quantitative' />
            <column caption='High_Blood_Pres' datatype='real' name='[v_15]' role='measure' type='quantitative' />
            <column caption='Smoker' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Diabetes' datatype='real' name='[v_21]' role='measure' type='quantitative' />
            <column caption='CHSI_State_Abbr' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='No_Exercise' datatype='real' name='[v_6]' role='measure' type='quantitative' />
            <column caption='Few_Fruit_Veg' datatype='real' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_21:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_15:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_18:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:Calculation_611926600994254849:nk]'>
            <groupfilter function='member' level='[none:Calculation_611926600994254849:nk]' member='&quot;05&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:v_0 (Adult_Adolescent_Obesity):nk]' to='&quot;Delaware&quot;' />
              <groupfilter from='&quot;Florida&quot;' function='range' level='[none:v_0 (Adult_Adolescent_Obesity):nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]</column>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</column>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:Calculation_611926600994254849:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='Avg. Obesity Rates' />
            <format attr='subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='wrap' value='auto' />
            <format attr='vertical-align' value='auto' />
            <format attr='wrap' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
            <format attr='display' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:Calculation_611926600994254849:nk]' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[Multiple Values] + [federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk])</rows>
        <cols>([federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk] / [federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Top 10 Obesity Rates Set'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Obesity Rates Set&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;christinalien/s-17-dv-final-project&quot;' name='federated.0wxqiao0ni8qwz1fno2qb0rnejzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0wxqiao0ni8qwz1fno2qb0rnejzm'>
            <column-instance column='[v_1 (Adult_Adolescent_Obesity)]' derivation='Avg' name='[avg:v_1 (Adult_Adolescent_Obesity):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Top 10 Obesity Rates]' derivation='InOut' name='[io:Top 10 Obesity Rates:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (Adult_Adolescent_Obesity)]' derivation='None' name='[none:v_0 (Adult_Adolescent_Obesity):nk]' pivot='key' type='nominal' />
            <column caption='Location' datatype='string' name='[v_0 (Adult_Adolescent_Obesity)]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[v_1 (Adult_Adolescent_Obesity)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]'>
            <groupfilter function='level-members' level='[io:Top 10 Obesity Rates:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:v_0 (Adult_Adolescent_Obesity):nk]' to='&quot;Delaware&quot;' />
              <groupfilter from='&quot;Florida&quot;' function='range' level='[none:v_0 (Adult_Adolescent_Obesity):nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' direction='DESC' using='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]' />
          <slices>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</column>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]</column>
            <column>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='wrap' value='auto' />
            <format attr='vertical-align' value='auto' />
            <format attr='wrap' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]' value='auto' />
            <format attr='display' field='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</rows>
        <cols>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='600' maxwidth='1000' minheight='600' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='28667' id='1' name='Sheet 1' w='84000' x='0' y='0' />
              <zone h='18666' id='7' name='Sheet 2' show-title='false' w='84000' x='0' y='28667' />
              <zone h='17834' id='8' name='Sheet 3' show-title='false' w='84000' x='0' y='47333' />
              <zone h='17666' id='9' name='Sheet 4' show-title='false' w='84000' x='0' y='65167' />
              <zone h='17167' id='10' name='Sheet 5' show-title='false' w='84000' x='0' y='82833' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='25001' id='6' name='Sheet 1' pane-specification-id='1' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' type='color' w='16000' x='84000' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='600' maxwidth='1000' minheight='600' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='&quot;christinalien/s-17-dv-final-project&quot;' name='federated.0wxqiao0ni8qwz1fno2qb0rnejzm' />
      </datasources>
      <datasource-dependencies datasource='federated.0wxqiao0ni8qwz1fno2qb0rnejzm'>
        <column-instance column='[Top 10 Obesity Rates]' derivation='InOut' name='[io:Top 10 Obesity Rates:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='29667' id='1' name='Avg Diabetes KPI' w='84000' x='0' y='0' />
              <zone h='37166' id='8' name='Avg Few Fruits/Veg KPI' w='84000' x='0' y='29667' />
              <zone h='33167' id='11' name='Avg High Blood Pressure KPI' w='84000' x='0' y='66833' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='15501' id='6' name='Avg Diabetes KPI' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]' type='filter' w='16000' x='84000' y='0' />
              <zone h='10834' id='7' name='Avg Diabetes KPI' pane-specification-id='1' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601016590342:qk:1]' type='color' w='16000' x='84000' y='15501' />
              <zone h='14834' id='9' name='Avg Few Fruits/Veg KPI' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]' type='filter' w='16000' x='84000' y='26335' />
              <zone h='10834' id='10' name='Avg Few Fruits/Veg KPI' pane-specification-id='2' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601022689287:qk]' type='color' w='16000' x='84000' y='41169' />
              <zone h='14834' id='12' name='Avg High Blood Pressure KPI' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]' type='filter' w='16000' x='84000' y='52003' />
              <zone h='10834' id='13' name='Avg High Blood Pressure KPI' pane-specification-id='1' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601022877704:qk]' type='color' w='16000' x='84000' y='66837' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='600' maxwidth='1000' minheight='600' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='&quot;christinalien/s-17-dv-final-project&quot;' name='federated.0wxqiao0ni8qwz1fno2qb0rnejzm' />
      </datasources>
      <datasource-dependencies datasource='federated.0wxqiao0ni8qwz1fno2qb0rnejzm'>
        <column-instance column='[Top 10 Obesity Rates]' derivation='InOut' name='[io:Top 10 Obesity Rates:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name='Avg No Exercise KPI' w='84000' x='0' y='0' />
              <zone h='50000' id='8' name='Avg Smoker KPI' w='84000' x='0' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='15501' id='6' name='Avg No Exercise KPI' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]' type='filter' w='16000' x='84000' y='0' />
              <zone h='10834' id='7' name='Avg No Exercise KPI' pane-specification-id='1' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601023086601:qk]' type='color' w='16000' x='84000' y='15501' />
              <zone h='14834' id='9' name='Avg Smoker KPI' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]' type='filter' w='16000' x='84000' y='26335' />
              <zone h='10834' id='10' name='Avg Smoker KPI' pane-specification-id='1' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601023254538:qk]' type='color' w='16000' x='84000' y='41169' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[avg:v_1 (Adult_Adolescent_Obesity):qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 10 Obesity Rates Set'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Avg Diabetes KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601016590342:qk:1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]</field>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</field>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601016590342:qk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Avg Few Fruits/Veg KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601022689287:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[Multiple Values]</field>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]</field>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</field>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601016590342:qk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Avg High Blood Pressure KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601022877704:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]</field>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</field>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601016590342:qk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Avg No Exercise KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601023086601:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]</field>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</field>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601016590342:qk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Avg Smoker KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601023254538:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[io:Top 10 Obesity Rates:nk]</field>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[none:v_0 (Adult_Adolescent_Obesity):nk]</field>
            <field>[federated.0wxqiao0ni8qwz1fno2qb0rnejzm].[usr:Calculation_611926601016590342:qk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Avg Diabetes KPI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg Few Fruits/Veg KPI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg High Blood Pressure KPI'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Avg No Exercise KPI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg Smoker KPI'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg Diabetes KPI' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Avg Few Fruits/Veg KPI' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Avg High Blood Pressure KPI' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg No Exercise KPI' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Avg Smoker KPI' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9eZhc6V3f+zlL7VW9VFfvrVa3ulvLjJbRzEgazb7bxjb4BgMBX+xAgJtA
      LgkYYpKbPDFJgAvEsS8YcmOMuRgwBpuxsR3P5tHsm0b70lLve1V3dXXt61nvH1WqrupNvVRp
      JKu/z6NHdfqc9/v+zvue97zv+zu/RTBN02Qb27hNIb7fAmxjG+8ntgfANm5rbA+AbdzW2B4A
      27itsT0AtnFbY8sDQM/GCcWzlZCFWMjP+f4hjA2UCQaDFam7mlDTMSLJ3PstxopQUlGiKeX9
      FuN9Q8kA0PjK//giJ06c4Jt/93WmI5l1ESjzo5wbnV/PlZw9e2n102aOF19+h95dnQhAevoC
      n//S3/DSiy/wzLMvg64wMja5rNi7775b/odciD/6f/4HJ06c4OLgxJoSnT17dh1ybxz9p9/g
      fz37At//7jNcHJkj6R/i8lR4XWVnpyZI5jQunj+Hqq+moY7yx//ti5x46SX+9uvfIrf0jaFE
      OXtpdF31xaf76Z+Or3nNhXdf4dnnX+S5Z19gPpGh/8JZctry61LhaQbG1/Ms3DyQF3+aOOtb
      eeyxxxh+7wcEFpJkZvqZmosiOuu5/0A3py/2k1bg2F37ePPtdxEsHo7vdnHl3EnMuUs07zpI
      myPLuYFxFF3iySce5typd1DTGWp8tbz44hsksxmOHT2CVTI5+/arLKQUapt30e5McmVohB1X
      Rjhy+A4wDXruvIfH7+/jH77xDDo6kUicbEOQl984g2xz8fCjDwCQTcxz5uosx48cQMCkqXM3
      jz/+OACz4wNcGplBN2Uee/whrrz3OsGEQmtbOy/94EWisRiHjxznyqnXSeZ02nr2U6uECeRy
      GIKHWiPM1EKaxvZu7tq3i9T8OMMRC4d2t/HOOydpq7NyZWqBusZ2jt21D4wM/eMxfvzHP4yA
      yTe/+Q90HNrBpTPvkhiV2HP3Q/jkOG+dvgoWF08/dow3TryAio29h4+Sii0gO928cuJFAsEF
      dne1ENJquWdPE2+/e57jx48gYNLY0cdjjz/Om9/7BqGszvzFt1mIp6lt7cFrTPHiiSEULceB
      zlpeffcCotXJYw8f461XX0ZHYt/hB2hrcAIml868Q2zYZO89DzE7dJ6773+YheFz5Lx76G50
      Mj0zy+FHP0xLvRslHeUbL73IxFyEe489wPCZV0gpJm29B0mNvs17EzrZB47R7lI5dWUSi6OW
      xx86gvA+PNzrQdkSKBGa5sQPXuSNK0F622rxNTYiiiLn33uPjJrl8tA0Dz90P5dOv8OB+x7j
      6SceREZgz8F7efLh+5gYH8VdW4/TKjM/cI6JuMqV82fZd/QhDhy4k3379vPQ8SNYJSA5zVjC
      xZNPPMXC8CXqO3vo23MHxw7fURRq8OJ7fPGP/pg9dx9HMjQCcyGS4TniOZO+vXuwigJzEwN8
      83uvcviuO4uN7B+7yokTJ7gyOkONtwG7LBIYOcfY2ATTKRtPPfkk++/Yx569+3js0UcRI4Ok
      HJ089dRTjF04RXhhhrDm4ujBPUxNT+Oua2DXznYAXN4WRvvPkQoOkaCWyalp7O46du/ama9c
      T2OK9oIsAqZpgiCx/+5jfPADj3Hh1Hu88fo7HLjnXpqNABf8SWYC87Ts6Kax1kU4NIdprWHP
      3jt45NHH2Lmrj+EL7xCZGSYtOIv3GBgf4Et/+sfoLXfS5hBpbPQhyjIn332HXX172Lf/MMfu
      2sfLL7/OoSPHaHdmOT8wiT8YoaWzh8Y6e4FJYP/d9/GBpx/lwqlTNDgMLo7Mcrp/lFZv/pqn
      P/wRhs+9zTPf+g4Jw8HeO/bx8COP0+ix0tjUjCjAu++dpnfvPg7efYxDe7t57a3T3HPvPciR
      EaYSG1nU3liUDQCPr4MnnnqKjxzv473LE7xw4g3uf/ABOpvqMICuXT1YRAGbRSaZzqDmFExA
      FMV8xwgCr584Qc9dR7lz9w4MHbytnXhdVkBA11QMw8A0AcmClk1hGDqKYa64Gdl94AgfeeI+
      Rscmi/uCmpYefuSJ+xl851muzmVo3rmbnkYHk7MLxXJt3Xt5/PHH2bernR+88BIHjx5nz64O
      ECXUXAZd11FUDVPX0Q0DQbKSy6TQtBwaIiJWeno6EQQ4/ugH6Guv55lvfzdPLtlpq5V47s2r
      HD3cx13HH+VgXzvffebbKACWOqxGmHhGIR0NINrrARPDMMgm40hWO4KRY2hoGMXdQotb5sM/
      +k+Q035efLNkSWbqqIaBKVrY3+HmGy+c4a5De4unW7v28NM/8REmRobJpKK8dW6Y++8/TkON
      AwQRTVEwDAMZjcGhIdJ4aGtu5KMf/TDW1ATPvbG4HC2Vre+uo4yefBbd2YpNEgGTRErh+CNP
      cnSvj8GxeTAMNF3HiI5wcizL/ceP4LFbEAQRpVCvoaQYGh7B5uvAI928xgbSZz/72c9eO4jO
      TTM8PkkwaXLfvQdwCjmujkzhrmugc0c7kmTFW1dDc1sbI5fPMjqzwI7ONkSbG6/bhilI7Gxv
      4PKlAWS7i/adO3HIAj6fD5AQtRhXxgO0tbUhWd04zRjnLg3Qe/AemmpcGKZIc5OvII2JYHXT
      17cbKR1Es9Xjslvx2AXOnruA4GziwL4uJODQPfcyPTZGc0sLAmAIMs2NXgDcNpGL/UNYnR46
      d+3Fa0lz7uIV7DU+On1OTp67TGvPQeT0DJcHxjlwzzFqHDacdfU4LRIzY1cZGJuhd+9+mhvq
      AGisd7OQk9mzs5WQf4zLA2N09O6lo7kBAZHO9kZOnzrNTDDOI488hFWGkeFhAsEox+4/Rm/X
      DvzT0+iChc4dbQxeOMN8UuPQoUO4bDI19Q201js4efoctb52WlvquDQU4MF77ix2nGFIdO7q
      paNWYCYh4RGSTATCeBsa6ejsIhOaYDqS5b4jdzEzOYkuWOhob2ao/wLBuMHhwwdx2y2AyejI
      EP5gjPvuP4rd5mD66gX2PfA4XqcVgNDMOGcvXiJpuLnnYB8NNQ7OnDlHXcce1PlRgrEMvqYW
      dnbtYm78MjFF5N6De5mamkGwOOjs3IHlJtU3Ctu2QDc3DD3Hqy88x87Dj7Krpbbq9c1ODHB2
      KMjTTzyIJNysK/fKYXsAbOO2xk06MW1jGzcG2wNgG7c1tgfANm5rbA+AbdzW2B4AtzFGz7xF
      YA2Ll6nRUVTTYHpm5sYJdYMhX/+SbfywIh1dQDDg8nuvM+wPs2NHO1P+BXZ3NfHyy2+Qwcn9
      jz2AGpln4OIZUpqVWrtOKJzkyFMfpbPe8X7fwpaxPQPc1jAYHbzKzHyMOo+FifEpnLUNTIwO
      YSWDw+6hxuMmFgmTyKiYuTjRtM7urmbiKfX9Fr4i2P4OcBtDyaZYiCaor6sjnkjR4K0jEl7A
      7nCQzeZwOp1kFQ27zQJajpwp47CIiKIIkhWrfOu/P6syAFRVxWKxVJq2qtx5GyUTSZIqzn0r
      toeqqsiyjFCFr8HVklnXdYAN9WFVhnAymawGbVW5VVUlm62MY89S3IrtkU6nMYzqWHFWS2ZF
      UVCUjTn33JA5TMslmAvFUbIpMtlra0edZDJdsTrCwQBZ1SAeiy3zKEsnk+ib5PX7/VybIk3T
      wDC2PmGGg7Nk1LxEpmGQTKW2zIlpMh+YYHh8Ud5YLJa3zNRVhgeHWcGHBeD6D7ppMu+fYHjC
      X/xTPBZj7aZQSK7hBbeU77owTQzDxDQMjCWLFrNwrgx6lgtnzzIXXnT2yWaSZJXyJ+GGaIHm
      pv0EFRGraSet2omG/LTv6ubKmQu09+3FosZIGna8DgjMRxGBjq5OJkZG6ezbR23BKnE1mKaO
      3z+DW5VR4iG8uSSzkRw9rXUMTgSpc1vx6CqSaTI+GWD3vr04LOuYJk0F//BVRHcDQmKOrGoi
      26zM+2do7ephwT9Fy85eIv4RRHcTDjNFXLPS192xhgOISXB2Aikr0VQjEI1m0E0Vpc5LIjQL
      bh8OI8VsLMfO5hom51N0N3sY80fo7mxmdCLA3r17lq2/tWyS+YRO784WApMjpAw7ajpOs8dJ
      WI0zFVCx20fI4cTnsRBNqhjZMJqlDqugUe+2MRmMs3dPH7JYLr2m5Ll7uloIzowTVWTIxemQ
      YGh0ip6eTubnwjjsMgvxLL07WxgcvIjF1YOkzFHT0kWz17PYArkIswkLu7sa8nw5mcYamZnZ
      Bdp3tDE7OUVjZy/J4AS2+jZIhYinU4xNRThw5y4c7lpmJ8dx+1rpaPLgH5uifzLAPffcjdNa
      6Fc1jqe5l/mJERyWnUxOzdNQK4NcS2humh2dnUg2Z/VnANM0GJ+aIjQ5RkI1yaQTpDIJBocn
      8LXtJB4KEIlEGRkYJBRP46210VzvYnI6RFrJMjg0dt06lFQY/1yY8YkpACKRMFMjQ8xHoyjp
      BMlUkkuDE6ipGMmwn4m5tV0AryE8OUDYtDE1MsTsQoI6pxVdtOD1NpALz9Kws4fJkSF02YGe
      jROJRJkYGiC7xnSjphaYmEsxPTHKzNQMjS1NjF+9SFY3CcfiDA4MEk1m8DhlYtEY6USC+UiY
      cHCSqZl5Usk0WW35u9wwDCxWK5IsE4mEGRkaRDchm0xT09rCvl3thJMmZnKesUk/vuZGcrqE
      oGVIp9NEImGC/gnC8eVvbcMwsMhWZNlgdiGLoMTIKAYjo5P07upgsP8COcFNJhnFPz3GwOA4
      O3f3IUTHUT1dzM2Uu6aauoZstSHLMrMLcSyZMOPzcdqavfhnAzS1dRCdvsrlkTkCM9MspFR6
      dnXTt7sPq6AzPTFOY2cP8YUgqhIjodjo6+tdfPiLELDJEv39l0jEw0STOTLJGJl0lJHJeUbP
      n7oBM4Bpsnv/YWqcMpFEFletg3S6hnpfI/E5P05fG0ImTFuHhwafD4csIAsCjRYVTUnja6q/
      bhW6JnD/Y0+SjYbQAT2boKWtHbfLRdieorGlnXZJJ53O4a7z4fXYr8sJoDuaeerh/QSDs1it
      LuxWgXQswtR8iJ1dXcyODtLc0Y3DKmDoOgk0WtpdyGvsGxVd5MGHHiITj4Ak47DK3HXsQbLZ
      DE6ng/ZaD40NNYiSiJ5NYk+buBxO6nwteOs85LJZZHH5e8vq9GDTAwyPz+BwOGlrr6WxoQ6n
      AKLsxKyTULJh0tTS2eLBYZVpbm7GNEHTVAQ1jbexBadt+cxotXuwmgGGJgy8HpGYYqG1xYPD
      IjAwNE5X7z4stlrSC3F8Ta20t/gYG5qiZedu5meGqWvpLOMTnT6cmTmGJnJ43TaiikxnsxeX
      3UqjION2uxBau+jWJ7DXNyDlIkyHUmipMLqria6ddYyPD+FtaODKUIDW1m4WgpNkampwXBsE
      spPwzAD1Le3sbfYyFojga/AhmpBM19HQ2Eg2JVVHCxSJRKivv/6DezNx53I5NE3D5XJVnPtW
      bI9YLIbb7a6KVqxaMmcy+c/aDsf6P9AVZ4BsNlsk2CpSldjU3WBuTdPyrpIb1CKsB7die6TT
      aTRNy+v8K4xqyXyt7zaizSsOALvdjt2+vqXBajBNE13X0XUdt9u9+PfAWYzB7wMgdj+K0PnA
      putYyl0pqKqKpmkbenusF8vaIzaFce6rAAjNBxD3/uiG+JTAX4GeVyXqnp+pSnuYponL5arK
      AKhWH+Zy+f2LzWZbrGvizfwPyYbUce+yMhXdAwiCgCzLSJJU9qFDiU6gXvwmAFZPG9aeR9fN
      aZo6auSdPL/kQJK6q/ohrBrcS9tDy0bIFdpDVrPYDvz4hvhS4VcwlHz8HanuZ6sm87W+BFDO
      fY3c6/8dANtDv471rp/ZEnc1ZNYKyoFS7ux3/xUAgqcV+y+8uKzMzW8MZ6gkh/8rAKJ9B+z4
      /RtWdeb7vwm6AlY3jg/8zg2rdyvQg1cxFoYAkNoOI9Z2rLtsxv91MtN/CYBW/ync7p9YPGlo
      oGUXf1cQppYDs/AtQrYhCDfOxOLmHwDvI7SRl0HLIjjq3m9R1g1t6HmUk38GgP2Dv7ehAfB+
      IfOdXy0uVZyf/A5Sw64bVveWhpqayxBLpNA1hVg8ybZV3TZuNWxhBjDpv3SRhvZuglMBsppG
      y847aay1Xb/oTQI1fp705JfzB577kX0b24xuY30wtCSJq/8OAMmxA7y/+D5LtIg1BkCOv/jc
      l+h+8ChHjx3Duey8SjyWJK1OUttQw672WiKZFJpLQtd1VHXRXtww9JLfRtm566J0vVnQMm2o
      /BrQcjH09HD+wNqLsAq3abLhOtXI22ipQQAUyxHUEq2HoS/ek2lusD0K8lzD8rY2Ss4ZsAFu
      Qy/pJ9NA07Qin66X825EZlPLFdvZNE302nKZSz9F6bqGsSHuBIYyB4CqOxGtDavIZq749zVn
      AIusMzwe4P5jK5210traQCQjUmuFS4OT7D94GFmWlu3yTXHxY4ooihvSAJglnYIgVFSDYJZ8
      5BEEcRl3tniODdeppM6hzT+bL9/UVa4FkhabXRA21h7X5Ln2yCyV2ShRW0rSxri1kvYQBbFM
      C2RKYtGYbqO8BqX3u7wP1RKTa0mSkTbAnYudIz36h/mD+h/D0fGpFfsQhBVlXnMA7Dp4gNmo
      suravnffoeLv9p3rlnkb27hpsOYmWBQlYqH5Vc1ot7GNWx2rDIAcL33vefwLYeqbWljNGsQ0
      VSan/GSTEfoHR5fZaW9jGzc7VlkC2XjiIx/kG1/+S7Je2yq27SZTY2PMxRSyKZnmOheBUILm
      euctswnWS/YXpmmsyr2ZTXDpZnTpPd9+m+DS+13eh1vZBOtlMq/1fGx4E6whmSZz4TgasEy5
      qabxz4UJLUSwd3UQicepafKtaApxW26CSzajS+95exNcuU2wUSbzcu5NboKzvPaDt+h94FEe
      bW9jRQNhi4v7jt9HJpPBIprMR9M01q3PkEyPxjBSeWMuyetFrIIB2ja2sR6sMgDsHH/gGG+/
      8SrPf/dF/uVnfoXVbPeuWU+2Ni//UrAa4v/4HRLP5lWEvl//N/S3txIqDIgHu3bhtt46H9Mq
      AT0eRwuFAJDrvbwWmef0zDQAP7ZvP32+xvdTvB8amIqCMp1vV9HhxNLastoAyPHOmydp6NzH
      Lz/49MozQAVxPjDDYChv3Xh3W8dNOQBMVSU3PAKA6HSgtbUyl0gA4LHZ8Lk2b96bPvkekS//
      OQC1P/WTJPf2Ml94IeQ0jZcGn8cfy3fcj+7fmOXoNhahzc8z9+//AwD2QwdxffrXV98EP/Tk
      E9clHLx8jmDSoKPein8hwR2HjlDn3Lp93dfP/BXJXP7h+udHf37LfJWAHo0R/O3/DIBt7x6i
      v/Iv+crpfIrWox2d/Pj+Q2sV3xLem3yHC/58/rDH+zb2Qkq8+AOU8XEAaj/2MeRG39oFbgIE
      PvPv0MP5tLIdf/Y/q1bPWHhha9agrW0dCNEMmp7jrjtbCMfjuK0119UCGWa5RsEs+dSmaTpv
      jr7KQjq/JPjU3Z9crPB91AJp+nJNRunxmalTvD3+OgDHux6ibwNaoKUao9IQH7qhl2lJNF3f
      kBYoc/482VOnAUgduZcvnT0JQG9DA584eHfZfW5EC5QeGkKbz8/att27EWvL0zd99fSfk1Uz
      yJLMzx1e9B1YlxYomcQozK7pXI7fffUlAHwuFz91Zx/PXPw7ALq9PTzqW9w/Xk8LpJVqowwT
      3dC3MgB0zpw+RW1zF26LyrnLQfYdPLIuLZAolGsqBHGxcWVZyqs5isclIr6PWiBZWq7JKD2e
      Tfh5c+xVALobetjjWL8WSFyiMRJLwpJIolQWnU2WpA1pgUpt60VRRC28jHTTJKZEuTp3GYC2
      2g5aN6AFSrzyKqmXTgDQ+Fuf4SsjA4xH8m/t33rkCU5OvEUiF8cq2fjFI4svsfVogUr17rIs
      FWXWDIOMni62s6LneKL5aInMa2uBSp8lQRSQRGkrA0DikSc/WDzq3TzRNt4njIaG+dM3vgDA
      h/Z9lI+3V3u3d/OhKg4x44Eof/CNMwDc1dvC/3bzLzsBiCSypAo+8b7a9Wu1rgfDMAlG8o7g
      FlnEc53rt7F5hBMZLNn8iqKx7vp9WJUBkMqp9I/PLwpxiwyA//LV15iN5h2rv/p/faxiUcOS
      GYVPfzmfaLunrZ4/+FjlGuT0QIDvn8qv65+8dxfXV12sHzOhBIIg4HZYK6oJPDc8SyiZD4t4
      fP8OvBXk/o9//jILifwe4O8++/HrXr/tEnmLI5HJMeKPAHA4nqGST+qvffF5NN3k6SM9/GIF
      rX1PDwR4vT8IQEdTTUUHwEZRDIxVybhAOUUlns6vJWxWGY+sY2aj+QptNZiagFGoS/J4SAmg
      FrQMNTYbsWykqCnyuXwYufmCtBLI9RUL1WEaOUw1lj8QHUQzEnpBA9NQ64TkbF4FJIgIzkb0
      SP5BEywWDLebZCEOjU2WENBJKXndvcvqxi5omHr+Hg3RQySVvx9ZEqlzSpipUIHLiSnYMQoR
      k0Wnk5zFUgx/6LZayahJFD1fV72jHkGLgZnfGGbNOlKFgMNOmwWnmMMsqJAFRz1GRsUsyCnU
      1BAvaHoskohFhEQuHybSYXHglARMLb9UMyUX4UIQZ7vVgltWMbP5thLstZiKiVGIvyPV1JA0
      TbSCxqjWbieaXsDARECgwenFUEKFdpZJKk5yheDANS4bVjWOWXC4F91N6NE4ZoFL8jUQzRTq
      EQWcFploJt8PVsmKx2rDVOPFPoykpaJRpq/WiZkIFM5JCA5fSR9aMdyu7QQZ27i9ceun+NjG
      NraA7QQZBWwnyCjHdoKMLaBSX2pvJLdhGGVfdyuJW7E9VFWlWqvjasl8LSznRnDDlkDZdJyF
      aJLA1Pia8fMBotEo0Wh0Q3GGrvEDBPyLmUf8/sAmpF1EIBAgG55hwj9PYG6eaHx5YNdsMkp2
      g36jweAsmlb+hg0EAkSj0a2Iu4yvkkgsBAiFw0zPhivGGQgEiAanCcWXz76xWGx5gWyUQHgd
      mYWUCIHQykqd0mfrhqlBDS1H/4UBVFVlNwbnzw+z787dOKwiCRXsIkwM91PfeQCXlJ/G6urW
      H5HN0DVy6RxnR66QNa1Eg5ME0lZanDozk2M0t3cSCPhp2dHHztb1h+bOZrPookEmC6aQI6vl
      GLp0CdFdQ42sEEmotLc0kNWCTM8nOH7kHpblaVgBuVyO+MwEAwsLNHqbSYYCpEwrbb5a0mE/
      Z4aDHOhtYyEcoaG1k9FL52jbdw97Ops2JPv8zBjj/hD1DV6sFiuJtILHYSE4OYzhaefooT3r
      5lNSUU6PJXjs/oO8ceJFPO27MWLT5CQPtWKanKOZeiHB1Zk4vW01zKZEHrhn/5qcsfkZJjU7
      +7tEnnv2PD29uwlFFvC43PhnprijtxOzthM1FiQVC+NxO5hLmghKLTnDiaAl6ezsXE5sqGQV
      C+nILBeGpmio92J11WDk8i9J/9hVVEfzDdwECxJ9+/aza0cLkUgMu5BDdtvpH50nNz+JIYoY
      2IhFwmSz2U2tx7WcgmB1YLfKxBNp0okYjlof+3taCUdSuOs8pFNbyEtm6mSVHL7WLho8djKK
      ilPWiaeyiHYXSjJKJrcBdz7FYM/BQ5hqEiQbTpuFbDZLJJZAyGWIaSIHD91JNuTHsNiJhDc+
      OyRTaWpr3BimyOT4JGY6jC6JJBWJeCyyIS7RYqe3s5npiUkUyUEsskBdYxvNXg9Ot5uFYJBw
      PIGupJFtTqLz1w+oYPN4aa2RmPbPITs9SKbBjt59uJwOOlqasFskpifGCIUj6IIFl8OGpuRQ
      BRfpuasY1tVfkvOBaYKzIZx1tWTSKYKBafxzC2SzWVxuN/PB4I1LkGEYOqYpYBo6hqGRyaq4
      PB40JYcAWKxWEok4NrsTqWAMtpLR22rJFfL8kEklESw2BF1BFyw4bBYkAXQEkokE7pqaFTOs
      rJYgQ9M0RMFENwQETEwBBETAxNRV0oqB225FNw3SmRw1NR7EJalFV5JZ0zQE0wRZxtR1sukU
      gmzDapEwNIWsauJw2LDIEpqmkU6lsTtd2KyW63KX1iEJEEsk8dTUoio5JEFAsFjIJOJINgdO
      +8q+FyslyDB0DQQJTVXIZDLYHE5kKd+WmpJFNSUsgo6iC9gsIhlFp65muZ9EqcyapiGJAqqm
      k06lcDhdSLIMpoGmZDFFC0o2jc3hxtSyGIKEzWbH0DNcuTzGgbv2c812sCxBhqkTicSwOV2o
      2TROdw3ZdBLRYsMqS+hqDtUsyRCTy+UqpgVJJpNVif9eTW5VVdF1fcs5ElbCrdgeqVQKh8NR
      lfwA1ZL5mgbIal07qWIpinsAq9Vabnq8BWiaVrUOrxa3oihomobTWTkjuGu4FdvDMAzcbndV
      BkC1ZL72At/IS6z4xC+1cV8PBi+fI5ZM4vW2EAgG8bV1s7e7FVEUq5JbCqgad94Ov3rcleSN
      nvtkMUGG2Pe1Mm5TVxdDyUgWBHFzL7Wl7aGHRzEKvgNi851I3s2HMF/aHtrku5ipvG2QvOtR
      BNvm7GWvDdZS7sTn85twwdOKu9IJMiyyjKGbZNMqB+47ytzIZDHXVjV1vaXc+uTbGLEZAOTe
      JxAcm0u+dk2HXMqtXv4WGDqCbEXet/nI0cs8oMIjaG9+HgCx4wjS4U9tiG8tjzDtnS+incr7
      F1ue+h2kPT+ybl4t+jpaOO/kkrM9gt3+cPFjmDbyGtob/w0A+cHfQPbs2JDMpVgqs/Len2NM
      vgWA7RPPINRvbhl67RtAxYLjXg+GaSBZLDjcNi6/+x7Nnb0reoRpIy+jnP4LACz7P47ljs0/
      TMu4+/8BfTjvMmdrP4hUs341Ydm9rJAiKfv6HxQTZDgObt4ZfZnMaqqYEEJw1N88cYHUIGos
      7z5J/f6KxQVaikrGBSrFiimSir82ERz3eujZe7D4e1fP6lOikQqhz+QdZKSdD26lym1so6LY
      Nobbxm2N7QGwjdsaay6BxgcHsTU00NLQsGKA3Etn3kXwNOMykxWNC7SNbawXShpHE6cAACAA
      SURBVPh1UuNfzB/Ufgh7209tqPwaT2uCb/3FN+h57AiPPP00tcvO5whHUjjFFBa3fUNxgbai
      IVrObZad20hk4aW8lYwOvZT7do4OvRSVjA6tqVlMLV6QP1PJ6NBuHvzgvcybtdSseN5Gg9dN
      NJXCtBsbigtUSQ2CJgoYJec2q0FYUQtU+H8z0aFLsUzm2yw6tKmnSY5+Ll/W1ork+fGbPTo0
      gIpsryV0eYj0o8dW9LW+8/DRFf66DQA1cQk9MwmAYfYCm/s+8cMA01BRI3k9v+HsBc/NE990
      jQFgkstmaWhto/JJ7W8OqPGLxczouI8hNaz/o9H1oIROkCskydObPg3srhj3NiqHVaNDv/S9
      54kpGqLkZnXHOINEIo3TLhNJZGnw1q2STWbzMA2N7Ow3ARDkGrAcrxy3FkdL5j/vC5adq6aC
      2sYPL9ZIkfQ0X/ncn2C2da9aeHxklIVEijqXDYtFRjNEGutdy9wLzZJguNeC0K4XpqEU39Ki
      vQOj/dgS7sVrDcOADXCXbhhN01zVLdI02bCrXenGbmkw3aX1bpi75PdSmUuVAoaxMW6zVC7M
      JUF7t8Jbfu3y56OUW69KH8LKfbjKADBQFI0dnW2MJLWVZwA1yfjkDMlUGrlrJ+0eCwoigiAU
      /y2i/LcgbGCeEJaXXa38WudWu760mutxbwVL61pa71Z4y7mX39MGyFbl3pLMa/Au5958H7Li
      s7fKtQWsMgA03nvtTRRnPX1NdSvvASxuHn3sESKRCDbJYCwQZe9uF2JBgFIz2qUdtBETW9Nc
      3njl3Kufux6WDtLVygsCGzYLXuueDaGUa2My50sszgLVag9hSXtspQ/L73el8qXc5dGyNcPg
      H/svAuCx2Xm6r9yFs1zmtWVb+veZeGy1ASBis1tBSZNNptfYA1D07LmzpmGNq7axjfUjc+48
      ppKP0Srfczcnp/PatEaXm7ta6vjGua8BsMvXy+ONm48FGUmnV9cC7b3rOPe6K+8dtY3rYzoW
      JVhIkbSrvgGXVSqGirRI6/d2upEYDAWLoSL3N7Vg3YJzVfjLX0YPLQDQ8jdfLTuXVBJl+QEe
      b1y/Kl6dmSHw6d8E8imS+LlPrTYAZNzu699AYHKEuG5jR4ODMX+EvXt6kNaxfjOy2WK8StHh
      QKhQwguAhS/9GfpCvvEaf+PTFeM2DaMYv1OQJOKiyEAo78TR5HLT7d38DJg5e47Ec88B4Hr4
      Yc56a3hjYgyAn73rXr536UvFFEl/+KN/vKH4t7F/eIbc4GBe7n/6U3xnYQ6A9po6Prh776Zl
      zl65ijqT98NwHL6Ll0aGigkyuh95YksD4EZiS1K66nwsTM0wmY3TXO9ibiFFi9dZ3I1fw1KN
      SPTv/p7ks/kOb/i1f43jyJEy3mgmglEI/lpvL/cOWs5dfi53dQCtEBfI0DS+dCYfOtxjtfEz
      h+5exlVytIy7tA4tFCLwq/8GAOuePUR/5V/wzOULQD5H2GzsCi8MfB+Ap/f8CAeW3HO5zKV1
      mGihENnzF4rcZn1NWVmWcJVJfZ32UMbHi9zCj3yomIzQNCEQ83N25hQAXd5uukrrWdIeS/sw
      9frrpE68DID0mX9bppoyjbXud7nMpYVN01jGVVbWWNIWZTKvxL0Io6xs/totDYBIKMiOnd3M
      To8jSWJRjbZUsHLF3dIOhW9fvshENP/2+N8P38t/fu4zxRxhX/3pr5WVXc5dcnbJ303TLL6V
      6ux2golZvvDqHwDQ17iXT/TdWSbHRrlLf4fTCwwE+wG4d8cxWJL62Fxyz2X1ll9J2QPB8gd+
      Ke9SWcrvqZS5vB8mI2P89amvAPCBvR+hq63cH7qUey2ZzRVk/p0X/iMpJYVFsvKfnvyt68i8
      9v2V17TGeXPt54MVuLaUIywejRBJ6XS31zMRiLJvXweiKCzz+dSFUi3F0rxVApFchtnCmtfM
      X1Q8L4nLNSbl+bkWzy7d5YtlfrgCuqkzGR0HoM5ZjygeKOFZzl1ahyhKS47LtVxLtSRLj8v8
      dtcsK5Ydi0uPRbFMC7RU5tL8YqIoLOMqr7ekHwQBoVSuJW2tX493iYzTsalijrDStltJ5vL7
      k8q05qK0usZsJW3jWv7XpVyCIOTtnVa8cl2QOHD34gbkoLdl81Tb2Mb7hFtjp3KDcHUyhCDl
      TWsP7mquGK+mG5wZzMfpdNos9FbQ5iIczzA2n7d5bPG6qaQy+vzwHAgCvlonlXy9vXFxksmF
      YQA+dKy3otx/+9IlMgWr51/66N1rX0yVBsCViRBf+MIPAHjoYCf/R1/luP/2pUu8cnEWgH/1
      T45y5DrXbwRf+u6ZquQIS2dVfvtv8qq7SucIuzA6x//34gAAH3/0Dn6ygimSfuevX69KiqSB
      yYViiqS7d7dUfHBdyxH2zz98+LrXFwfAWrvnjcI0DfQCl2EYGAgYYl5/bSBiiAJmQU1mkPfL
      vPZSNAwTWZCRBbmkfF6VKSDnbWdKuQV5kdsEU5YXuQ2jyCsJhV1/gVdCwjApcoumiCwJyFJ+
      AWoaZp5XNBBEK4ZpFHlNSQLTLHKL5NfM17gFBAxTLHKbUOSVJCFf7zWZBQlTWGwPUxAQStrD
      NE0kpCK3aZoYWEraZJFbFEwMpJL2EDAlcZG7hPfa4F6UWcQwhRKZBSxF3mv9ttiHpiiu2odm
      SR/KolzWhyIyorAoM6a5pA9NTGmVPixUdk1mcUkfYopYxNI+NIq8gmjJc19rC1HCNM3qhEbc
      xjZuFWznCNvGbY3tqBDbuK1RlQEQj8erQVtVbkVRKpYmdiluxfZIJBJVyxFWLZlzuRy5XG5D
      ZaqiBapWrq1qcldSCbAUt2J7XAsSUA1UU+aNonpLoFyIF187i56L8eyLr6272PTEBOttnrGB
      swxPhJjoP8fF4XGisUThTJKJibxB3IZzbqUX+MGbZzCUGP/rhdc3XD4cCq1iPq7w2kuvktM1
      fvDcc0TCMXJLOiybipNVyu8+l4ySXiHKRywaZdnzmY3y0usn0dUEzz7/KuENyJ5NxcioK0uu
      ZTO8/PobaJkYz770+rLzhqayEFkhn9c68ObLLxJLpBidmCr8RWViwr9mmYmJiXXzL4wNcHpo
      gsGCQeBSSJ/97Gc/u262dSKbzeKQdfwzCXRTAZudzNwI3zvxLrKe4uygn2xwlMvTMSxpP898
      7wQut5PRiRnUdIyRwfF8ppf6eiaHBvH5fOXcjryhTTSRRVeS5BQdmwUSiRTjo8PkgMnBMebi
      CdRsmsjcNFeuXMIUZP7xmWdwOt1cHh4hGs/Q0ugFCjGFDAMrCrMLabKZLJLNippNE56bZmh0
      mExOYbD/CrF4gldefI6ZhMHwmdcwHV5Gr15g2h8kMD2ObrVx8sXvMxEz2LWjuSCzhXgkSiqV
      JmeAZBrEQlO8eWYYuxHhzXMj1DsEgsE53nj3Ei4pxctvX8bnEkikY5y5PEo2HWfo6hD++Qiq
      kqGh0UeupD1QM8xHEmTSOZBlVCVLYnaUk1f8ZBfG6J+MosQDDA2NML0Qp9knc7V/hquXL4OR
      RfS04CxoFHO5HFarFVEU0VWNWHiWlAI6EpnwDMNDI8QTSUYnxwnNBRken0LWkjzznRdwum0M
      j4wQz2icfOm7+FMyXe1NK/ahqmYIzUfRtTSvPP8cc1mBXHiOqWCEyNwE8RycPPEdpmI6I+ff
      RbXVE5y4iiq6GLv4Jq+cHefA3nxc2pWC42aiCVJ6mlRGJ+Ef5DvPv4FokRDUNMGFUBVnAEFg
      R1czk7NJaqwiaRV62htw1jWjpaPU+FqIh0PEMxp7u5vJqAII4PB4ObCnB9kmcPX8eVKKSTQW
      W/FNLAgCdkFFdNYV7UmupSfq7NlLU13+q5Cm62CaxOJJdu/pJqcY9N5xkNqVotgJAq2tXgIL
      aTz2/Hmrq479+3cjmCL79h/EKUPrzj56drTQvqOd4FywUFamraUJsgnsTV04LaWvaAGP18f8
      XJBGbz7MmNvbhF2LYjibsKhxkjkDh8eLiyyqrQ6XGSeazX9XMUwTSRTRDQNJklYOPiAINDX5
      mA3FqXPlUx/V+Voxkws4fa3kYiGUwkveJhqcP9+PikB3315qnav7GQiCQENjE3OhGA3ukutE
      GwfuOozXW4fHYSGRyrKneyeKIXDHwcM4zQhO3y7s8upLE8nqxiMrpHWB9u4+utqbivZk7vpm
      drV7cNXvxCkLtLe3MT8/T2NTE5lUCk2w0Vi/9pc/QRDY0bWTuZkAst3FoYMH6N7RxNXxeSRN
      uXE5wt5P7sDkCHPRLHfsvxPrKkN+tRxhlcBW20NNhEhbfNRasoRiKj7vool4tdp6pRxhlUK1
      ZC7LEbZOFAdANputmBYklUpV5UGqJve1xB4228pJ47aCW7E90uk0dru9KimSqiXzlnKE2e32
      DSeI05QM4Vgan6+e6MICnvoGLAWT02rNANXirvQMYChhTL1g4q1bymQ21QxGPG8cJ9jciO7N
      JfW4hmq0hyiKVZsBoDoyb2YG2JIadHBgAJsFQsF5dElAjmbZ3d22ZmyWrWIZd3wGlIL2p64L
      5M35MRuGUVG5M9N/hRLKe72pjb+OXr/4kOuBS+T+4ecAkPZ8GNsHfnfT9SyLCzT1DkbBy0vs
      fQrRt/5E2Et5q6UWXiqzfuU7mLG847t06BObTnO1GMi3pA9DV/P/ixbw9iwrs6UB4LRZmI/F
      cYgSOw7uZW5sapW4QJXDUu7s659DH8mnSHL89NcRm+7YEm8pd+71/w6GChYntvv/zy3Lvfib
      st8bbSstNZCXCxCEjrLy+vQp1Pf+DABbfTdC4+b8fpe2h5kMYsTyqkqxdgfCFmatpe2sDT6L
      PpGPHerY82EEp3fTvKX/A6S+lg+XLnhacf7888vKbGkASLKMKMg0tDcyePo0bbv25T2WNhg3
      ZiOoZBycpbxLy2sXvl7MESY++K83zLeaXFuNC5Qe+b1ilkih72s3pD2U4RfIFdxJbY/8W6x3
      f3JTvCvLtXpcoI3ywuoxnFb6+5YGwI5de9hRSA3W2rK6VbcRm0YP5qciqaEH0bt6uMVtbONG
      4oZ4hGkTb5N76bcBsN7/q9iO/dKNqPa60HNBtMSl/G+xCWy398DM+L9ejMOq1X8Kt/sn3meJ
      rg/T1IvLQUwNhI090mtenU6lkCwWrFZrxaM+3wzQU0OkRv8QAKH+R7CuEQh4GzcnlIVXi31I
      /Y/h6NhYzuU1BkCa//e/fI6+px7g0SeeYD25u69FOr5VUiQtjWBdyRRJ5ZGVje0USSWoZIqk
      Mg1Y4fmrUIokGweP7iGqSuuORCYIwi2VIsksC80hrppeR9hEiiSlZMO19J5vtxRJS1HJRNlV
      TJGk4W5oZm4ySI5lcZ62sY11w9ASxPs/DYDk2Am+X36fJVrEdXcMG/msXA2YRo7YhV8EQLS3
      QfNn3ld5trEJmAZGNv8NQRArb2qyFVw3RZLF7n5/N8CmWdR5I25Hq95GZbHKFwcbT3zkSabO
      XmA6ssBq5qL+sQHeOXeZgSv9BP1jzIbTVRN0G9uoBlaZAUxMU+bYQ0fon1NWvkRNcuHqOJpu
      4OrpwWG3E1VyaJq1slogY1Fjwgq7/G0t0M2vBTK10vtd3oc3oRZI4bXnXyKFjUcfvYcVV20W
      Nx/80AcIBALYBJXBiXn2HziALC/fiW9FC2SWGjatsMv/YdQC5TQNrfDSsMkW5CWf8G81LZBB
      6f0u78ObUAtk4Y6D+7lytZ/nv/scn/zlf7aqKrS1tRUAb0vnuoXeRjnSp06T+N73AHA//jgn
      GuvLEmTsb2mtSD26YRDP5R8JiyjhroLvw62GVZPkzYcSHDz6CA8/fmspQNW5OShMuXJra1nI
      75sVejRK7mo+vqf90CForJytfPrdd1H9ed+D9JF7+MKlcwDs9jXyM4cOEk7lgwe4bR5uxuRL
      pmkyXwidL4kiDc7N+2uYqooWzLuvCjYbss+32gCwcsfBO1c+VQHEvv2PpF7LRxeo/2efwnHw
      wHVKrB/zv/+HxQwxHX/5F8xk804SkigikuYPT/xXAPY07eNTe+5aN6+RShH/bv4tLTc24n7i
      8YrJfD382dt/wkDwCgC/+fh/WHlJugpSb7xF5r33ABB7dpWdu+g/zxde/X0APrTvo3y8ff0P
      V/Qb3yT99jsAeH/pF/i2kmY6lo8M8UtHjlOzQeeqUiiTk8V9g7Czk8+98QqQT5L3Gw89tmle
      LRgsyxHm+Y1PV9YYbr2mEFo0WnxItVSKr58/w1ghk8vP332ESGoGrWDgtMfXU1rBdTfBpZlK
      NE3jj9/OD7Rau51PHOjDH5sGoMHp29AmWEkkiH/7HwGw7tmN7eGHyq55bfQE376Uz2j/sf0f
      56i8/k3w0g1z2T0ZOqHkfFHurJLFuoFNcGl6Ir2kH/JpjMr7ZSObYC0cLunDNGE1XXxT51SV
      v7/yTXJaDkmU+fgdHym53+tvgud///PFPG++v/wKJReSyCSYCI8C4LbV0LSBTbBWuhk3TAbn
      5yo7ANZrClGaqUSSRFKqQrTwphZEkT956/MspPK6/7/5xNdLK7juJrjUtlwuSdQmICAvyUoi
      bWATLEvlG7mJeIy/OXcagHvaOxCNXFHmnJ5DtK5/Eywu2TCXZnmRRKnMt0CWpA1tgkuzwEil
      WW5EoSxziyiKZRl1rrcJFsrqkRC00naXeGnwhWKGmH968GNlbXe9TXDph6fSPkQQmE/P8bsv
      /ScAjnTexy/vX0zScr1NcNnzIApIolSZsChjVy/y1ltvEUlt3kDqVoNuGKRVhbSqkCt5s2zj
      1kIFZgATXXZw1/5WwskE9a7NubOtF5pukFUKAZDkm3+DC/kEGb/3128A0NLg5mcrt+VBN8xi
      e8jSrdEeNxMqMAAEZCPL+f5h9h28F4BIIsPJofwarrXBw+az0S7H11+6xA/O57Uav/YT93Gs
      gtxvX55GL6RjeOxw5XwDNN3gnf78Gr6nrR4OVC5DzOsXJqqWIeZ3//oNdMPknj2tfKCCVijP
      nRxmwJ8C4Kcev5MKJp/hT771HslcflH873/2oetcXSGPsK7d++kqOfYvJPnTb58B4JG7drK3
      kiOgivjGK/3FFEn33dlx28eOPzc8i6abNNa5qORTOjOf4OxQXh35gaM9FR0A/RPzxRRJhnH9
      mG9VCYyVTGeZjeTtgjxOG012BSOe1xiI7maMrIAey4fIlpubCANZLS90s8fDbGwarWAC0e3t
      RkuP5IUVrSxkvcQL0WKb6924lDnMXJ5L9O5Cm1vAVPLnrd1dTMfzqjlZFGlw2pmO5q0SHRYn
      zU4Peq4Qn0euZTpiRS1oO7pb6yA0AKYBooxY34M6WbBotNvRmxoJFbQeLqsNUcgVdepeVwMe
      QcHQ8nXrYhNT4by2wm6Raa+TMSJjBa46TKEGPZTPiyx560nabSQKYb4bnC5imRAZNd+eHXU7
      EHN+TDN/j0mjnVA8v9Wr9zjwigmMwmZcrO1Aj2UxUgUbrdYWgkqe1y5bcFggmMjnW6ux11Jv
      FTGU/D0gNzCxIGCaJrUuGz5rFqNwrehpQU+bGPF8OBq5pYUFUy/uhVo9NUzHJjAMA0EQ6Krf
      iZYeLfShnVCmjkQhk12r140jF8DM5dtSbOhF8weLalBLdxczhT60SBJ1dmtRI+a0umhyuNBz
      swWZ65iOyGh6/sHf1VaPWcjdLEhWhJou1Ol8WdHpQG1o2M4Qs43bG7f7LL+N2xxVGQDpdPXM
      oqvFrWnahrOLrBe3YntkMpmqRYarlsyqqm7YsrYqA6BaD1I1uXVdL/tSWEnciu2hKErVMsRU
      S2ZN0zbch1VbAl04ewZVzzE9PbfqNWdPn0I3TS6deofE0oGrpokm126os6dPo2oZ/IHQKlcY
      TE3NEPRPk9PLOzM4N7fM0Wd2bJCZcILpwkapFMlkEiWZJJLMb9YwTQYuneXy4NiaMl6Dnktz
      9mI/sXCQeKr8vpR0kpwOc3OLbTU53M+pU++xkFi8tvT8eqCmIpx87xQDo9PFsrl0krSy/ofE
      NA36L5zhzLmLRKIhkhkdNTFf1JZh6MzNr9b+666EscHLvHf6LMns1j+mXjzzLifPXEBfhxao
      aoGx7BaT0ckZ9LTO2Zlh5JpGvLU1REIhvL56GlvacEk5xmdCRMMxahZmOTc0RGdXN4amUeeS
      iRsOhvsv0thYz1woTMuOXjwllmAui87Q2AyiLhCYuIq9vpm6mhrC8yG8vjpaWttQEyFCgguM
      MSYCYXytjUSDCZxOiXgqS8+unSVf3iXmAtNYBRNl4CLzcY3W1npi0TTz/km6unfjn5+hsaWb
      PW1WTPdO7uyqZ2zgIrNJaK+3kjFklEQUw1bDwX19xVCFpq5jZBNMz4HLnmZwYZ6mjh0Ex8Yx
      lTS6rxt7ys/klJ+Dhw9jSg4O37uXgf6r+DMx8LRh1fIplDo72spCIK6G8ak57jlyL4NXrjAf
      SzA5OUV7RzsicfpnZmho7aK7vXFNDi27gLWmkw5PhsnpOSQpSmMNpESJk/3v4W3rZn5qiJnZ
      FuqtGqGURku9i+lACIvDiq+pg4XJQTxtfezeuXL0QFPLoogu7t7bwsDoGKlMksb6Gqam/fTu
      7mNqcpp6n4/EwjwuXztKeIqc5ObuQ/sRV2gHq7MGWdOYmhhienqe1rZmFsIRWlvbmQ1M4vE2
      k5zz09LTW70ZwOLyImYiZLU0gbkoBhLRuQkESSQQiiOLApbaVsKj52loayc850cxBRAkZv1+
      JFMhHg5iqW3DzKTxtjaTiJXnobJ4GhHSC2SUJMFQEgOZ8MwISALzkRSiILBjhw+vt51oPEVL
      Qw2hcIzu3l4MJUUilV2SZ0uko8mDfz5OKqtRJxsspDTuuPMO2jp2UOt20bNvP1ZBBYubTCTA
      fChMOBxlYXaWtCHRt8OHKrkx1TTZnJJfShTYG9s7WfBPE43H8DW3kYiGqGvsYHdvJ42+Bmob
      2+hqrUPRQFNzBGemEGQr0Via2YCfdDJGOqeiKMq6lig1domJmQAZRcNV10hvVzOpRIrQQpiG
      plaSsch1+1GUnSSjs8zNRbDbZRbCUQRATUZIquAP+Gnp7KHebSGZ1fDYJZI5g31dHbT1HUSN
      TRJLawT8s6tXIsnkUjFmZuexygJNnT3EQwEEWWJ+PkJLSzPR8Bx2j49sMobb20xTnYvVXvCp
      eITapnbCswFEi0Q2a7Jv716UTIqO3j3YRB2rRSS0kKxehhin04ksGKQ0ES0VwbC4cFkEJIuF
      nGricdnJ5XKoqorNImGKMvNzc3jq6nHaLCiKimCxk4rMYXPXkYxG8Da1kE7Gi7Hlc7kcEjpZ
      QyKXCCPYPNhlE4vFSk4Dt9OGqSuohoxo5pgLxfD5vMiSjKapGLqOzeFEFPJcmXSamvpa4tEk
      NtkkltGpr3Fhs9lIxcPkDAsetyNfzmYjGQuT0kRsKKhY8bgd2G02ogtBTIsLmywgAOlcDm9t
      DapuoGUzyHY7oeA8Dc3NoJtYJIO5hQTeOg+iAKJsIxNfIJrWaGttIjQXwOqsxWGTMXQdw8wb
      6NkdDmLR6Oqx9k2TucAMbm8TsmAiiQKank+xFAoGqW9qwW5ZOf7/YoYYkUQ0TMaQ8XocectY
      VUG22FiYn6emrg6LLAMmhpolltHx1roQETAkC6aaJRIO46z1UuNyFJ+PpTJnU3HCSYXmhlp0
      REQ9RyAYwWOH198+y6Fj9+MwszhqfVhEEwGwWG1lM+G171iiKGKz2VCzKWZDMRoavNisFjRV
      RZRlDF0jHl7AXutbHACqqhYzbGwViUQCj2c9seRuHm5VVdF1fcNJQtaDW7E9kskkTqezKlG+
      qyXztc31RrL8FPcAoiiWm55uAZIkVYzrRnFfmwirwX0rtsc13moMgGrJfM2/YyPcxSslSdpw
      OpyRqxeJJJL4GluZmfHTtKOXvs4mZFmuSq4toKrcgiBUhftWbI9sNovVai0+E8qFv0d564+A
      fIRv68Gf3DR3tWS+9t1iUzPAZiAKoCkq6XiW/cePMjc8iaZ5l3nl6FMnUS9/K1/h7qeRd23e
      rW11j5+tYSVPNm30ZTB0BMmK1P3wlrjLPKCyUfTpQhojTyti8+bdT5d5hIVHMMJ51azUvB/B
      s3rehuvxlnmE5dKYmWjxdyWD424FhjKPnhoCQBV8SI6dG+Le0gBQNQ3ZKiNZBS6+fZKmjp6V
      PcKSfhjO58sSm3ZXNjju9CnMRN6gTe56CMFRtylewzAwTbPcm+iFf1/MEGP/F29UTua5SXLP
      5X1T5b0fwdbxf1eMOzf8PNrJfIok+YO/h8X70U3z3qjguNrku5ipvHWovOtRBNv69we52FWy
      44vh0a3uXWXcic/vB/Ipkty/8OKy8lsaALvvPFz8vblUbFuHevav0IbzOcKcP/N3SJscANt4
      /6Cc+gr6xJsAOD/5HaQNDICtYtsYbhu3NdacARaCQSwuFx6X64cyQ8ytCj3rz6cDAlhX6pL1
      wVBjmAUfBlOTAHfFuG9WrDEAUvzl5/8nfU8c55Enn6RmHWSmaa6Yb7c0NMe18CObxXLu8nNs
      knutPMGmSUVlLrWyvBYmZCOIX/2t/7+9Mw+S4yzP+K+7Z3rumT1mL2m11uGVrJVsyShIPghy
      jA04lUoowlEJVeQCqnBSJoFKSCqnqaIqhKQgCSGVBBPAxthlIA4VbA4f2MZgW5JlSVjWtdrV
      au9jZnauvrvzR496Z2Z3dne0s5bW3uev2dnpp9/5vu/t6e/r93senJJitrPtgSpup+J1Pdza
      xPdRR+8HwGj+MJH4+xrC65h58qfdOY8U6sFu+XhVH5ZzW3X1YXVbLub1vND7iyRAiAO37SEl
      huu6DizsE1z5ui5fXMekePE+90h/M0LonTWPX4k/8VL+xvXyFi/+N/rMTwAwWz6C0Dy3P3Wl
      PsHVcVVbsl42d9Vny7lXFLNQ6Q8wP+aFz7m8kCsDq7cPF0kAAykYJ9U/MG8r/QAAFORJREFU
      gMothJcZzEJ+u4t55i4Fx7LRJ78HgBjchLDpXQ3zxbWNNGbB3W5pC80Ivs4FjxeE2t6ztSDY
      BTDdKkkBo6E+wQJzukCN9E2u6Ccq+3ElfVj5fRvrE1wZ8+KxXZZPcLyp6Q07UzZzJ8mfc6US
      XZfI37/CEa3j9caSDjGitNgNkINp2l6Rlc/vW58sr2NNoUYCBHjHr72bR77yddSWQM1BPTI0
      yMWJNB1NIYq6SceGrbQ2hb3JyBycitd1bbWrKlat5i7/9/zzLkFdFVet4x2HurcHlnM3tD3m
      xbZYe9QXd/lk1Klqj0bxLhRz1adXEPPi3Au9X9MhxrJ0JMdhIpXFhPmKxEaek6f70TSDcGQL
      PR0t5A3Te6JaKfi62GBYAlUDZ7HBZNtO1ecXh1MRV/2Ntyh31YipFsAtP2/9yVV5nuqVkLnX
      9uUPVKc6zsrXdfGW8yzQh5WrQDbCZcdc+yJ2ibsaNR1inn/yOYLdmznQ1c2CBcL+KHfeeQeT
      k5MERJOBsQx9fRuQJGFeZaldMUmrr+rUscq3783nrhRWFZHq4LarJuq1KmIFof4q0XIBYKGK
      1xQrRXrr5S6fBFfHbJVtkaq3wteoao/yAsnytqqX13bKvu8CfagL5TFLdfWhtcw+hIX7sMaZ
      fHT3bGLg4kVOHT/J7r19NX2C29vbAdib3LDsoNex9lE8dBi9311Bixx8O9+ZGmuYP8DriRoJ
      YOMLJrj57TsIBy6/6OlKQDt/HkdzN/YEdmxvmEOMmUox8TeuLLe8bRvOR/+AFy9eAKCnqYU9
      XY27AMwUC2RVV+2tPRojcoW9mheC8sorFJ58CoDAddeR1hTPH8BybM5OncayTQRBpLe5vrbR
      zp3DMdxf/uDOxulq2pqGft6tlBUjEeSeTbU9wno2b2rYiathjIxglpQE5M2beWjwLOdKhgh3
      33Qr07lBdMsdxDd09tXFPfOlL1c4xHz37CkAwn6Zmzd18u1j33L/17SJ2zvqULK2bKxpN0Y7
      mSSjKJ6P137LYip7nEdeeRCA9+/9bW6uY8zmn32WzP3fBCD+nt/gZ1t7GuYRlvvxE+iDgwCI
      d72bpzLud+iIxuiOwRNn3Crd3V03sKeBefaPT33W8wf46gf+s65jp7/4z15b9zz0YMNisqan
      mbz3M4DrEGP84cevjENM/sdPUPjBDwFo/sQ9KJJD0XAHvGGYfPmnX2Sm6CbI1z/4QPkJ6naI
      eWl4CHAdYvqSIZ46+yMAru/ay8HknM3RUg4xpjXf6rP8b9VQyZU0SlVDxa7DIcZSNeycq7Np
      qeo8h5hTEyfJqu7tRV/77rpsUpVjx1APu0Yezlv38dK4K/nS25LE51hee/hFP9dvmHvcuZRD
      jFNxHqtiMmqaVtkqWJUzyzIcYspn+aqu8+hrvwAgFgjwls5mvnviYQC2tGzjtuTczXm9DjHT
      +VxjEsCxbe85wOU4xAjiXGP6fFLF48xqh5CrxSFGquKa7/LSOIeYR088wvHRowB8/tf/lcga
      cIgRvH6ocmap0yFGlESOjo0ArkfYzrYAzw88A4Buabyj4ypwiDl/+hccPXqYVK4xm+rXsY7X
      Cw1xiLF9YXbt6CJdLEDs6puwLRfPHruAUVqye9f+bUt8+o2Px144i4PANR0Jdl7pYJaJVE7B
      r7r3BG1NS1ewNcQhJiSanDg1QN8N+wA4P5rmm998CYB9O7p4f8fKz3IJj71wliP9rqDTh+68
      nvqmyIvj0Z+e9iT/Du69pmE1UHlF5++/5M55utvj3HNL4y4SR06P8dhht63v+KWtvKNhzPC1
      HxzDtBze+dZt7Gygi8X//vQUxy+486XfvWsv1zaOmr++72nPIOPhv3vfEp9ukDRi97br6C67
      YCq6Sf+oO0i72+PQwARIZRWPO1dcG7dctu14MbtonEVSTtE87huzCjTQImm1MD0714cF9cr2
      4ao4xGi6QbY0OAOyj5jPwlFdRQEhEMcxBezSuaRYjIKA58wSDwSYVdPYpUfvyUgSW5sqRStR
      MCOoursCEwsHCFg5HKOkCBZpw8rmcS7pw7S2ki6tp4uCQFT2kVbchpclmZgcxDFKcotiiIwi
      eYKqrYkw5MfdJSBBRAi3YaXdYwW/HzsaJV8SEgv4JAQsCvolx5goQcHEsdy4bDFGuuB+H58k
      0hSWcAqlUml/GEcIYpdEd8VwGM3vRy2tWERlGcXIe8vCzaFmBHMWHPc7qk4ThZKgbDjgJyxq
      OJq7oiSEmrEVA6cUpxCPky21jV8S8Yt4K1chf4iwJOCYrneXI0VIlXSAg7KfqM/AKa1ECcEE
      ju5gl9pWisfJOw5maWUoEQySKc5g4yAg0BpuwdZLArqij7weRjPcOOKRALKRxTFL/RRtx8pk
      vVUmKdlKRimdRxQI+31kKvowgGNkvT5MFyXs0qpSMhH2BBMQJYRQsqwPZexoZN0hZh1vbrxR
      S/3XsY5lYVUSIH9JQ38NcRuGgaqqS3/wMrAW26NYLK6aQ8xqxXxJNbserEoCrIZy22pzL7aZ
      eqVYi+1hGMaqOcSsVsyXqhDqwardAmWnRzly5GVGp2bn/a+Qm8W0YXR0zHvv5LHDHD78smef
      CTA2NjbvWABsneMvPMNPfnac1V5DcByb1469xNPPvUBRa7yFklmcYniywOTYKNncLHrZRbfm
      96+BQmaK6dkioxeHMJbhjjIHm9nZ3KKfUHIzTKbyjA8PMZ1KY1X9OBRmMxiX3jNVMvnav6ZT
      4yMU1TyHDp9gZnSYYhXXzMwkmmYCFplMdt7xhUIO01z412l2ZoJMocCRw0fJTQyT1ivbQVMK
      qLoBWAwNDa+eQwwIWLZDwG9z+MUXkONNxIJR/BiMjA0Qad9ObuwMwxMz7L9xN6F4Kzva45wZ
      GWbywhnatlyPNjOAKchs6mytpBZltm/dyKjYw8VXj3B2ZJZtmzcwk8qyoauTsclR4s3tpIbO
      ITZtxKdM0bxpOzNDZ2i7ppeJ/lM4sU7CxjTTRpg7fvmttb+FILL12l7kaZWZi6f4yblxdvdt
      R9UMWuIyh46cYNfuXZzuH+aWWw4QCdTXpLalo2oymCoXB88gJbch54eZVIMkQyZD5wfpO3Az
      sWXQhiJhhoemwNQpvHqYM6NFdvZ2ohgiZjZFVjMIBkJ0JJuYmJqivbmFoXSOZDzEhcFR9t96
      Ky2xhQvfg6EIQ+OjYJuETYvC7DQZVUQ2MkzmbbZ3JTFnpxkZmaS7eyOGnOD0kefwtW5h3+7K
      lf64LHD+7AUMn4+ZgkLr+HmeOX6Ovh1b6R9OsW1TE+fP9pPs2YJT1Dl76jhiuJWWgMXoTA5J
      sAjGOgk6WWYVaG0Jk07N0tHTS0vIx8WBATRHYihdoM04z+O/OMvWazYxkirQFZPImAH2791N
      sZhfvV8A0S/T1hpnZGgQpDCGrpCeGmdoZJz2ro3EImE6ure4LuRAMZvm7MAwfkyQw2RS09im
      garpFIvFms6C6dkczU0xbAL07ejF0DU2X7eLIHnyKkRCASKREFNT00TDISbHR8jpDpFQgNl8
      gVh0OXoXLjKZWRLxBJIPUulZZqZTxCIiswUbn6WQyde/jCzKEdLjg4ynsmzY0EU0EiCX11Dy
      swTjSXZt6URZ5g+P6I9gpoeRE0kyszlaYhE0x0ff9s3Ekxvo3riRzRtamM0pJJrC5NJ5rt11
      A8FQmA0drQRqmGUACL4gdn4SX7QFXVMxbJG+7VsxLBsRG11VsQWJXX29GLqOWpilYMpkF3Ch
      CTS3MT42zq52mYmCQyqVQfY7qKaIXcySMwV277ketAKKotG24RpaYkFU3SToE2ht6yQWi6AZ
      FgHBQiHArp29WIaOFG5mcmKcXZubGU9rZDNpovFm5FAQq5glFGshEY8iCNAaFFfPISYei5DN
      FoglEqjFHJIcxjEULHyEgj6KqkkoKCPgFq0V8lksRyIWCZLN5QkEQ/gksVRJ6lZHybLsuYs4
      loGJDyyNfFEjGokgSSKWZSFKEo5toykFHFFGsHUEfxBbV5HkEI6pYgl+/IKFZgkkYhE0TcM0
      TSKR+U+SHNvGtB1ExySbVwhHwvgEAdO2UFSdcDBIoVgknkggLWBatZAjyhy5QyGfBV+QoF+g
      oBhIgoUj+AnIfiQBHMmHVGNjdjW3rqmIfhnH0MgrBtFoGL9PwjTde2N3N5lDLl8kHg2D6MOx
      LXRVQQqEvSSYc4iZSwpDUxF8Mo5tgSDgk3y89soLzBghbr6xDwQBURSwLRtHEFHyOfzBMKGg
      PC/mUDBIICijahY+waKomYQCMgVFJRqN4Cv1pW3jFQcO97/K4KTCgQP70FWNkCyimhAOyoii
      QFFRkUQRQXAl0lXVICCLzM7mCUdCFBWNeCxKvlAgHouDY84lgKZpDVsFyefzRKOrI6u3Wtyr
      6RCzFtujUCgQCoVWxSBjtWK+tAIk17GByLuzlGW5Ya4dpmmuWoevFreu65imSTi8/Fui5aI6
      ZtcfwK3RF2OdK/IHWK32sG2baDS6KgnQyJjL/QEEIYkU6qnrIuaN+Ooa95VAFMUKLv34I2hP
      3gu47iKBAx9rGHejcKmGv5xbeexPwdJBjhJ612dXxF3Oa6YH0R/7JOD6A4Tuunx/gNerPRzb
      BKu0Qif5EcTLv1hWx+yYGlxSnfAFKvYwLAWzcJLi+Tl/AH/kdyq4V9Uf4I0Os/9pzyDjzQ7j
      lQfRnvkHAAIH/wz5LR9uGLfyvXsq/QFatzaMeyms+QTQnv8XrBHXbih4x72ILVuWfayRPYEy
      /HX3j+gBpNZfbVhcxuxRLGUQAJudQI1JcINhjR7FGj8BgLT5bUgtr99gWotY8wlgp/qxRl4G
      wDEWXiqtBcfMYuZfBUDwX0MjbyT01HNoU48DYLV/CmicusFiMAeeRS9ZJAVDzesJsAQWTYCJ
      4WH88TjN8fgV0/x0HBur6OrPIMiwLKeCdaxjeVgkAfI8+G9f49rbD3Dwzjuv3LCzdbKv3gO4
      8uhs+tyVimQdlwnHUigOfwMAUW6D4OW7hDYaiyRAhFvu3EdKitc04ZkYHiSjiWzd0MzQxCxb
      N3evq0OvYeiZQxjpnwNg+vdB9KaG8Dq2jjbxKABS+FrYePUkwCLrTTqOFGL87BlqPeBP5xW2
      9HTRP3CBoKgwkarvHnwdVxesYj/a1ONoU49jKRevdDivCxZRh3bLgxMtLTWyxMHnGPz8xZfp
      aG8mHo2S0TVMU15SGKuucli7rBBmGcJYdh3c1T5miwlj1VvCW60GvZgwVr3cRvpnOLb71N7y
      7VtUGIs6uO1yr7ElhLHqidmpUxjrcvtwKWGshd6vqQ797I+eYiKdwSTCwsVCNrYNTS0ttMcD
      nLkwxe7rr8fnmy9OVC2MVY/JslNe370MYSypHu46hLHqNYbW6xDGqpe7MHofdskkT+p9cFFh
      rHq4zTqEserhtalPGKuePrQrYl5cGGuhmGvcAgX4lbsOMnriNAXHqJEAEtt33cCevl5aOnvY
      d+MNBHzrM4B1rC3USAAb05R553vuJBGMNnR9fB3ruJpQ4xbI5OdPP0XOFLh2W2MfEK029IvD
      OCWhXXnzZv7peVdHMh4I8rH9N1/J0NZxhWFMTDD1ObduKHDdDlo/9tFaCSDR1tGGMjZB/+lz
      7Nrb19BHxsbEBFbK3Sjh797IFA5KaYKyMdGEvILirukvfLFCHv2SZr1hWWimxsDMOcDV7lmJ
      XlfR0JkoKTrHAgGSkTe+q/qah2l6Y8PXluT01GRtg4ymtk1s2bmHgL/x1RL5H/yI3ONumUDy
      k3/M90WbM9PupO5Tb7uN9mitJw8rw3R+ks/88C8BuGHDjXzyLXcs+1grlyfz0EMA+Ds7Gbtp
      P1898iIA+7t7+M3dey47LnNmBuOiK1vu6+rE39E4KT19cBAr4+7LDmzvRWxQuXf6/gcoPPsc
      AMlP3MOLkQDTBVdU667tOwmvwNRj7NN/gZVKAdD9X/+x8mBrwLCs2gYZnV3tq3bipfCNQ18h
      p7pX17tv+fgVi6McjqqWOaLsgJv2V/z/h6e+z7eOuE87f2vfh3nbPFfB2lCOvkL6K/cBkPjg
      ByjecTszpcG0qamZxAo26cx+539QDh0CIPS3f8WTursu0hmL0xN3ePy1/wNgz8Yb2VfHaWxV
      9TwNHNPk5GSGwbQ7aG/f1sunv303OS1HwCfz7+/9Ul0x24W8x207DicnxgEI+HwkArZnRLI1
      eS23t61MC7Ihl3c1n+b8aJrrercg1mFzXwuHhl5kpuD+IlwtCbAULNtCtzTv9UpweHiowiEm
      sQKHmHJohulp7W83dMKS42ntx4Nx9m1snLCobulee6wEpm1x/ytutW9bJMp7+zZV+APc3rZ/
      scOXREPk0QeHRmlrDjM+U2BDcv1euNF4+OgDDMy4BYEfufnutV/CexWhIW0pSBJ+v4xeuvIZ
      psVk2v0JD8q+hW1WLxOvXZhm+uQkADf2djVQZ/nq9QcYmOn3HGI0Q33dEmC1/AHyio6BOz4S
      kTruFZeBLzzyArmSP8C9v3fbkp9viD9AZ2vc8wkGODOc4vOPuDX6B/dewx81sBT+yOlRnjjm
      Ckb9yfsDDU2A1fIH0AyTR5529x00x0Lc1tkgYtamP8DDT73Kc6WL2J9/6FYuf/lgPs6NpDx/
      AHsZgideAhiGUbeuokcSStC7NYGhFjEA0bHoanIzOyoLKI6MHt0MgCWE0UIBjA53kq0gEEKg
      2ec+ptZVlVY5iWS5V+JiUUHDTSzRSRIJiB63iInib8UqcaPbGC0tnqFdUVE83pgoYWgm7UF3
      9MWkBEVN8LgFK0Iy5veqWTVVQYj0gKUjBGLYuubFLCQSWLruccuOg9/2e9x+249iRjBK3AVV
      4MlDZwDobotzoDWBWopZ8jVjSZLHrcl+/LbjcduGTkxKeNyGZqI67Ti4/9c01dNMKhQKKKEo
      Ronbtv3osajHLTpzvCEEBBOPN0gIRQ947WFZATqbBCzLISKD4gS9PrSdIHpoLmbFcYiU9aGm
      qCQD7YSEMLIkU1RUj1dyWokG5/pQsE1UOVnWhyZGaytWaSlcKZb3oYilWV7MUTGGooseN1aY
      tpiMLLmXLkUpYpZ4hXASyzDm2iIWwzb0OVkUy7IqXPTWsY43A9b9Adbxpsa6P8A63tT4f3oA
      kRFEXL6DAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAW+UlEQVR4nO2dWYwc13WGv6rqvWfjbCSH+yYuEkVKIiVZtKzFhmQ7gWInNmAEMPLgPATw
      gwPESYA8BDIMBIEDxEAEB04COMpDnMBObMtZBTtaSYqLyOGI5JCz7/tM93RP71VdlYchm9PL
      rKzuWep8wABzu6vvObeq/q5bVX3qVyzLshAEh6KudwKCsJ6IAARHUxEBzMzMVCKMxNpksRKJ
      BMlksiKxFhuTqxLBK3maIbE2T6yNMKaKTYH629sYiyQYGR5EN8wll229dJFE1iI00sHNrvES
      S1hEIlGWW3/puVmu37oLepT+kdCSy44M9JMxLQb6ByjqNhVhLBQv+oyRTnKttQ3TSNA/PFmc
      pWmSSKbIxONMRyK517PpOa5eukhbR//SAyhgLjzE7bvD6NFxRkLF35yGniGd0QmHp0gm9dzr
      /XfbuHDhAn1jC74FTYOx8eKcV4JppPnk2mU+unydeDLO2OT8ujWzaaJza/tGD4/3c+HCBTr6
      x5kdGyMBQIb+/tEFS2UYG5teU/+lsKws2uuvv/66bT0uQiKRIB2LMDQdxdIT1FQFaf+kjYzm
      J52IkwyPkXIFmJudIxj0M9TbjuJvZHa0kzmq8ekz3O4ZpdqnENMhFp0jFp3DraZpbbuN1+fj
      zq1P0LUgHtUiEAgAkInFGBrqwFNdx9RMGuLjdA5P4yMLHoX+gSkUI4U7GETTo9y6dQf3tl1o
      iUlu3O6muqaWqdF+ZsIR4lk3RjJGsCqIoigARMOzzIz3ogTrCc3EUNMz3O4apr6xiqHOPoaG
      Brl6/Qb+QC0Dfe3MzGVpbqpnsLuTnUdOsqepjsnBLm53D1PfWM1QZx+RjMlobzuTMZPGbbXc
      C0UikSBrZRjuHKC6xk0o4yM6cpfByRh1viydvYP09XZy+24vbr+Xwa5uEpaH+roqJqdnOX36
      cQY6O/B6obWtHX9tHeFQGDOTwhWowqUqedvr/josRXhiADO4myPNGj2jc0wM9zA2FWFbQ5DI
      rM7sRA8dg9Ns396IqiiL9qPrOoqi4Ha76ejs4ckzZ5ka6EDPWCgBlUQ8xeR4GLcZ5ZO7vdQ2
      1NF+rZXxcJzGbT7aWlvRtQDJ6SHaO7oIhWYIxU1c6Rlu3OyipqkZn0tbdEx6MlK5I4DiCrCn
      3sXQVJzx3tuMhpMMDY4wNTHC9FyUgVu3iaQNAGrqm5kLj2JqQbxWmtZP2omFpohmXbRdfB/N
      7yccnqWvd4jHnnySmbEBDp04zeRwb2FUdj9ynLHuDoz0HDfau5idGiOemuXWjV5C4Un6x6dw
      AVWNuzBNOLCzmp6haZ56fA+d7T0Mh5Lsa2mg68Yl4mqgaIPuOHSM6b5ODFNnaCrGif1N9A/3
      MDZtcOKxR3ns8cdpaQjSsOsgdVqaVBb0rIXP48KlqUSiUaLhUYbHxxibNmh0RTDrDuNLjhNO
      Fa1Fjhw7SHdnH6noDAlXHfXeFGODAyTczZw4epTTTz5FjVdh/9ETGPHZB59UXXhUhdlIBDM9
      y93uUSZ7bzIYMfFqi++kpTCzBm6PF4/Xg2mYBOp2sLfJS3RujtnpMSZiPh6t1+mYzKy8U1XD
      pal43Bp6eo4Ll9uprQkAFtFIhERkmr6RSaobW9jtU7jZ18uB46eYHO4jEktx5GgLHn8LVmqW
      yGyEbGycjsHw0uOwspUTgMfrpXn3AZRMjLqmnfhdUFNbw/YqF2lfCxYJmrZtA8BXtQ1PfIa6
      fUfwB4LsaKrH7QtipSIcevQkM1Mz+P0+GuuruH75Kh5/FTevX0H11+XFVDUNjyfI9oZq8ARo
      2laDP1BDTcMuMnqUw7uqsNRaABRFo6VlJ5qqsc0Pl67cobGlmV27WtBUF4+deY7U1BCG+WCC
      pKgqHrefPbsaSGc1Akqa6+09NNQ3s2tPCy5NJTTSy9hsmtrqKvyBIKoCB/bt5OrFC1xv70HX
      Dbz+IG6Xm117WvDVNjPb38Z43IUSmyCeTjExNb8ja5oHb1U99VUuvFW1JKcH6Z+IU9dQT8v2
      BjxujZ47bSQJUBXwEQj45xNNRzn/4Ydkq5vRDB3V7SPg87D3+FPUmmHCM5OE4kkmJpaeJt6n
      rnEXIx1XOX+tl717m6irrcHrD+DW3Piq6tFSY1ztjbC73rPi/aO5xs0HH35IlBoa6pt49tQ+
      BkZD+P1edF3H7Q3gdbupravFFwyyo2Ebt1qvovrqCFZV4/UFqK3yEfD70Q0dly+Az7307u31
      16FU4kbY9PQ0jY2N5Q4jsTZZrHg8jqIoS0637GKxMeVdBYpGo2U5M08mk0QWnASWE4m1eWKl
      02kURUHX9eUXfkgWG1OeAHw+X9mC+/3+svQtsTZvLMuyUBSlIrEWG1OeADyelc/ZVoPL5Spb
      3xJr88a6fxWoErEWG5P8FEJwNCIAwdGIAARHIwIQHI0IQHA0IgDB0VTk59CCsFKM/vOY010A
      KP5tuB/9UlnjiQCEDYXe+TbG7Z8DoDYeKbsAZAokOBoRgOBoRACCoxEBCI5GBCA4GnsEYFnE
      IiEmp8NYlsXs9ATReFE9nyBsOGy5DGqaGW7dukMw6CY5W8fwbBozM8S5587IIUbY0NgiAEVx
      oVlpZsI6PqWKQ6dOkOy4Q9w08Zsm2Wy2IlU/gMTaRLEMwyiqCLPMB4/MsSzLtjwWG5NNR4A4
      praNvU2QSmUY7hrCiKXYq6poqoqmabjdbjtCLYvE2jyxXC5X7rEo9zHUB3OGwvcehsXGZIsA
      NK2aQ/sbCKcUjj6ym4nBHlwtx9GW+IzR8x6Zth/n2v4v/S2KKjemhcpizx6nKDTu3Mv9mvuW
      fYeX/Yg5N0Z24OKDF6ylnxa3WYj96AtY8SkAPE9+He+5b5UtlhkewNLnn6GmeKtRa3eXLVZ2
      8k7uf6WqGTXQULZYlUS+cu3GSM3/AVa2vPPo1K/+nOzINQBch17G/9rflC1W4p+/mvvf+5k/
      xvPU75UtViWRizSCoxEBCI5GBCA4GhGA4GhEAIKjEQEIjsYRl0FTv/4ORs87AKjNxwl8+Yfr
      nJGwEYj/y+86QwBWeg4rMW8PZKUq84RlYeNjpWZlCiQ4GxGA4GhEAIKjEQEIjkYEIDgaEYDg
      aGyqCEtw/aNWkiYcPXma6f7buOv3c2Rvsx3dC0LZsOUIoKoBzpw7x+7GGszZIZTmo8Qnh6lM
      BasgrB3bboRlk7PE1Bpq9AS1O4Ikp12kTRNlkaL4rJnNa+u6gWKuzrG8ZB4lYpkLrF/LXWi9
      0GTWNM2yxlo4LtMsfwH5St9fKeteFG9ZdgnAYmRkjD17DlPNLO+d/wA1sI2DqoqySFG8pWoY
      C9putwtFe/gC6FKxDEXh/motd6F1mgciUFW1rLF0ReH+14iqlndcqWXeXwvrXRSfVhS7BKCw
      9/Dxe/838dnPvWxPt4JQZuQqkOBoRACCoxEBCI5GBCA4GhGA4GhEAIKjEQEIjkYEIDgaEYDg
      aBxRFC8sjT53C8uIA6B6GoC69U2ogogABBKD/0A23gmAp/4FqPv9ssSxTJ3ZG19/0K7/Gr7m
      V8oSa6WIAIQKYmEZDx5LY1npdcxlHhGAsCVJTf43RqwDAM27HbyljzQiAGFLYkQ/IRN6HwAt
      +AhsLy0AuQokOBoRgOBobJkCWZZF182rTCdVTp08RuuVq2i1O3j2ieM8fJGjIJQPewSQTTE+
      E2fXgcMkRgbZd/Z5kt23SVoWXtPENE0Mw8j7jFngCpnNZsHKX2YtlIplLaidxaLofTtjFcYt
      Z6y8YT1MrIJ+lhvXcu8vHie/Dtwyi2MV1gSvdUz523yRMdlXEwweXwAlM8vgRIT6JgPDslCZ
      r+tUFAVVzZ9tKQXHBlVRQX34GVmpWCgLYikUv29nrIXvU+ZYSt4Ca4+l5P+/7LjWGMsyC/aB
      EvuGouQns/Yx5fezWM62CEDRfOzY5mMklOSxJ07R2XYVd/1ufIoCiwlAyReAoiooZRJA4TSs
      UgJ4qJ1yBbEK9ltbYilL7CxL5bISrMItUUpsC/YL5SG+rJSCxmJfjPYIQFHYf+wU+++1z557
      3o5uHU1i6E1SE28B936e0PKX65zR1kTuA2xULB3M+4bbqWUWFtaKXAYVHM2mPwLoc+3okWvA
      vfMK7+fXOSNhM7HpBWDE7pAa/fG9lgIHRQDCypEpkOBoRACCoxEBCI5GBCA4GhGA4GhEAIKj
      EQEIjkYEIDiaTX8jrJLEev4KPfIxAK6qE1D/zXXOSHhYRACrwMomsIzovf/j65yNYAcyBRIc
      jU0CsEgl40Tn5jBMi2QiRipjTymgIJQTe6ZAlsmNq5cJNuxk3/Zqrt8dAUXjhXNnpChe2NDY
      9lQIXU+TSGaITkY59vQZEh3txEwTf5mNsk2zuLi+XEbZVkE/5TTKzq5yXA9jlL1wXKZVenst
      l8uK4pgFRf33CtXLYZRduM3LbJRtcuzxZ0hHB4lEU2RHZsgk0+xTVbQyG2UbBXWe5TTKTuXV
      qyplNcrWVZWFm6ucRtkL67NVpfT2ssMo2zKtvLaiqrhcrrIYZadXsq0UxaZzAMVNKjpOKFPD
      8dNPUJ0eY8eBI2i2dC4I5cO2ovg9h06w5177wLFTdnQrCGVHLoMKjmbZI0A6ESEUMwh43dTU
      1shVHWFLsawAPn7/l9wMbWNPtcorr32RtZ2SCMLGZNkpUNP2nUSGO9ADDXJSK2w5lhWAogU5
      eGAPXpeKtdzCgrDJWFYAR059iq/8zm9BPCQCELYcy54DdLV9RHv/JNv3n5ApkLDlWEIABuf/
      5z/oGA3NN/3TmMjNLWFrscQUyMWnv/BlXjx7BNPU0OSOgbAFWXa3HhocQfEHSM+F5RxA2HIs
      MQXSufTOO2iNR3nhoErK3SjTH2HLseQU6OkXXqROjXPp8mU+bm0nu/jCgrApWeIIYHLr6kVu
      9oxS27SfE6dOyRFA2HIsIQCFA48+zclnAkV+XoKwVVhCACrV1cHKZSII64BtFzfNdIS3336f
      jBHj/Hvv8lHrXblqJGx4bKsJ7ukZpK42QGigskbZhWV25TTKLqwJLqdRtrmicdkTS4yyHxIz
      McXNjj6yqQR+10GqGwyyqzTKVhR1bT7BhdazZTTKXngutCI/XR4mVnHsJY2yH8pUOv9/Mcpe
      JVqwmd/+8msM9fWxY+8OWi+t3ihbXaNRdpHhdqWMslewozyMUfZqx/UwptL5fYpR9prZc+AA
      AE+LUbawSZBf+AiORgQgOBoRgOBoRACCoxEBCI5GBCA4GhGA4GhEAIKjEQEIjkYEIDgaEYDg
      aMQmVdh09IamSd37aXOdz09LTe2a+xIBCJuOX7TfYiI2B8CZXXv46snTa+5LpkCCoxEBCI7G
      ppJIk65b14kYfk49fpSem624G/ZxeE+zHd0LDsbSdcb+5E9z7dqvfMXW/m07Auw+dIImb5K+
      9jvQfITYxBDiFS/YgTE2nvszE3Fb+7bJJVIlOjXEaNSk2QfV9VUkp92kTBOfGGWvKZYYZZfe
      VvMPT3iw2y62jitqlG2acYYGp8hkM3hattN+/gO0QB0H1flCdzHKXj1ilF16W2mallc3vNg6
      XqlRti0CUNUgZ5//dK69d+8+O7oVhLIj9wHKjD46RuLSpVy7+tVXSLrduSmOpqoEPZ71Ss/x
      iADKjD4yQuQnP821g+fO8a+DvXTOTAHwSGMT3zjz7Hql53jkPoDgaOQIIGx6wokQVwcfTDOf
      2XduxY/yFwFscbpnpnOXORsCQeoDgXXOyH4m5sZ588rf59qHGx9hpbdgN7QA4pkMmez8xVJN
      Uanx+Wzp18xkiL71y1w7cPYMnv37bel7o/Hmtcvo9064Xz1yjJcPHVnnjDYWG1oA/9Vxm2sj
      wwDsrK7hD8+9YEu/ViZD9N9/lmu7mpvXVQApPcm1oSu59vHtj2KP1IXl2NACcAqRVIQfnP9+
      rv1HL/0Zx9fQTzYcJvKzn+fa1Z9/1YbstjYigHv86OPLRFJJAE7v3MVLm3CqkI3Fif3q17m2
      /+yZisU2LSs3XQXwaC7UTWCtJQK4x1Q8RiiZACCaThFNReid7s69f2z7ifVKbVMwGo3wxkcf
      5tp/8PRzHKhvWMeMVoYIYBH6Znr53jvfzbW/99obrL3wbuuR7u4m+fG1XNt65XNFy1wZ+Ii+
      UA8Atb46Xj36SsXyWykiAGFNZPr6if7irVxb+exLRcu0jnzM+93/B8Duur0igOXIDAxgpTMA
      qLU1Re8bWYN/vPJ3ufanD77I/grlJmxNNpQAZt74Afrw/GXP4EsvwnNn897PWlne7fpVrn2w
      4TD7qyuZobDVkN8CCY5GBCA4GnuK4k2Tm9cuEk5anDx1kvbWVly1O3nmiWNFDo2CsJGw5xxA
      UTj51KcY7Otgpqd/zUbZFvl1nAtL6O7Xdeb1YZr5hsiszCjbLNHPwmOhaVmYBTXLZja7JqPs
      oppls3icxePKYrJ6o+zinM2iGuWS+a7BKLt4XGbRMoXrvXCcJY2yrfya4FLbHAq3Q/4yWTNb
      WaNssOjv7qCqeS916hAhPbsmo+wiCr2EV3hncUmjbEp78ObnVnqZQqPskrFW0E/+MkrRa8Vr
      h9KxCsxwS+Zc0B6ODNI6/HHutS+ceK3IKLtkrMJ+V7BO86IrxdtYKeHfW5BxyfVV6PxcMhel
      eFBlM8q2TJ3hoSHU6ShHTxxl6vZl3Nv2rN4oe8HA5ldy/vKFRtqqqpboR13aKFuhqJ/SO3vB
      MiV2vlKxCjoqzk9Ri3aMwj5UVUWxVjcupdQOphaPayDcz0/bfpx77ZVjXyzoU1l2XKUEUPjl
      NL8T5n9OLcin5L6xjFF2qTEVjnt+HecNqvSYbCuK17w8/9kHP7xqPPcZO7oVhLIjV4EERyMC
      EByNCEBwNCIAwdGIAARHIwIQHI0IQHA0IgDB0YgABEcjAhAcjQhAcDQiAMHRiAAERyMCEByN
      CEBwNPYIwLLIGhkyehawSCUTpHVxCRY2PvZUhGHR332DqLGTk3s1LrUNgOrmhXNnpChe2NDY
      ZpR96NgxOjpiRCaiHHvmLImOO8RME/8qjLLzDJtNE7OgKN4oYZq8FqPsUv1Y2oNlsqZJNpt/
      BDMMfU1G2YVF3bqh5+djFudjGAZZZfVG2VZB0XfWyOblM28yXZzPwur6lRplF47LKGobeabX
      WBa6Xh6j7MJid8MwKmuUbVkWljW/w/prVUZHZ0kn0+xVVVyrMcouMEBeWEOqKAquEqbJhXWe
      KzHKLtXPgyXmrUs1LX/VuFzu/KL4FRplo+W7Vbld7rz6WUUtzsflcqFZqzfK1lz5OWsuLe8I
      rGkamlWcj7EGo2ytYFyuorYrv45aUXC78/Ozyyjb5SrcVvmPZi+7UTaWRXvrHeYyKvUtjxEM
      dVG3/8jGeu5iGZiajTM+Ny8cVVE4sb9pnTMSVos9UyBV5bGnPvXghdrTdnS74Xm3tZ+3W8cA
      8Lo1fvKdr65zRpuP7/7TB4Ti83OBb3/tOXZXOP5W/5IWNjjTkQST0fkngutGdpml7aciArCA
      /rHZXLu+xl82E7hUxsiLtbOxqkyRti4z0QQxfX4dulwqu5uKH1W/VajMEcCy+NYb/5trfuM3
      nuDzwfKE6h4J8f2ff5Jr//U3X6GlPKEqytjMHFe6w7n2y08eKFusf3uvnSvd8wLYWV/FD7/9
      m2WLVSmypnnvPtU8Hvf8SbtMgTYJ3SNh3vx1Z6797IndYqW6Cv7zYhe/vPJOrv3WX3wNkJ9C
      CA5HBCA4GhGA4GhEAIKjEQEIjkYEIDgaEYDgaEQAgqOxXQBWJsoH777DhY9vF9i8CcLGw3YB
      hAeHOfjMZ2h2GyTt7lwQbMZ2AbjcCulkhoxpmwWlIJQN2wVQs/sgka5WzGA9Hrs7FwSb+X+Q
      tnXMCXblbQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Obesity Rates Set' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
